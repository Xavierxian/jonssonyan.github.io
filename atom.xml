<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>jonssonyan&#39; Website</title>
  
  <subtitle>怕什么真理无穷，进一步有进一步的欢喜。</subtitle>
  <link href="https://jonssonyan.com/atom.xml" rel="self"/>
  
  <link href="https://jonssonyan.com/"/>
  <updated>2023-02-26T15:15:16.147Z</updated>
  <id>https://jonssonyan.com/</id>
  
  <author>
    <name>jonssonyan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>封装一些JavaScript时间相关的方法，精确到微秒</title>
    <link href="https://jonssonyan.com/2023/02/02/%E5%B0%81%E8%A3%85%E4%B8%80%E4%BA%9BJavaScript%E6%97%B6%E9%97%B4%E7%9B%B8%E5%85%B3%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E7%B2%BE%E7%A1%AE%E5%88%B0%E5%BE%AE%E7%A7%92/"/>
    <id>https://jonssonyan.com/2023/02/02/%E5%B0%81%E8%A3%85%E4%B8%80%E4%BA%9BJavaScript%E6%97%B6%E9%97%B4%E7%9B%B8%E5%85%B3%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E7%B2%BE%E7%A1%AE%E5%88%B0%E5%BE%AE%E7%A7%92/</id>
    <published>2023-02-02T15:06:36.000Z</published>
    <updated>2023-02-26T15:15:16.147Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>每次网上搜太浪费时间了，一次性整理齐，其他时间段可以推导代码写法。<span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>(); <span class="comment">//当前日期</span></span><br><span class="line"><span class="keyword">var</span> nowDayOfWeek = now.<span class="title function_">getDay</span>() - <span class="number">1</span>; <span class="comment">//今天本周的第几天</span></span><br><span class="line"><span class="keyword">var</span> nowDay = now.<span class="title function_">getDate</span>(); <span class="comment">//当前日</span></span><br><span class="line"><span class="keyword">var</span> nowMonth = now.<span class="title function_">getMonth</span>(); <span class="comment">//当前月</span></span><br><span class="line"><span class="keyword">var</span> nowYear = now.<span class="title function_">getYear</span>(); <span class="comment">//当前年</span></span><br><span class="line">nowYear += (nowYear &lt; <span class="number">2000</span>) ? <span class="number">1900</span> : <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> lastMonthDate = <span class="keyword">new</span> <span class="title class_">Date</span>(); <span class="comment">//上月日期</span></span><br><span class="line">lastMonthDate.<span class="title function_">setDate</span>(<span class="number">1</span>);</span><br><span class="line">lastMonthDate.<span class="title function_">setMonth</span>(lastMonthDate.<span class="title function_">getMonth</span>() - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> lastYear = lastMonthDate.<span class="title function_">getYear</span>();</span><br><span class="line"><span class="keyword">var</span> lastMonth = lastMonthDate.<span class="title function_">getMonth</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//格式化时间：yyyy-MM-dd hh:mm:ss</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatDate</span>(<span class="params">date</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> myyear = date.<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">var</span> mymonth = date.<span class="title function_">getMonth</span>() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> myweekday = date.<span class="title function_">getDate</span>();</span><br><span class="line">    <span class="keyword">var</span> myhours = date.<span class="title function_">getHours</span>();</span><br><span class="line">    <span class="keyword">var</span> myminutes = date.<span class="title function_">getMinutes</span>();</span><br><span class="line">    <span class="keyword">var</span> myseconds = date.<span class="title function_">getSeconds</span>();</span><br><span class="line">    <span class="keyword">if</span> (mymonth &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        mymonth = <span class="string">&quot;0&quot;</span> + mymonth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (myweekday &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        myweekday = <span class="string">&quot;0&quot;</span> + myweekday;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (myyear + <span class="string">&quot;-&quot;</span> + mymonth + <span class="string">&quot;-&quot;</span> + myweekday + <span class="string">&quot; &quot;</span> + myhours + <span class="string">&quot;:&quot;</span> + myminutes + <span class="string">&quot;:&quot;</span> + myseconds);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获得某月的天数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getMonthDays</span>(<span class="params">myMonth</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> monthStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, myMonth, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> monthEndDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, myMonth + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> days = (monthEndDate - monthStartDate) / (<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>);</span><br><span class="line">    <span class="keyword">return</span> days;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得本季度的开始月份</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getQuarterStartMonth</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> quarterStartMonth = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (nowMonth &lt; <span class="number">3</span>) &#123;</span><br><span class="line">        quarterStartMonth = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">2</span> &lt; nowMonth &amp;&amp; nowMonth &lt; <span class="number">6</span>) &#123;</span><br><span class="line">        quarterStartMonth = <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">5</span> &lt; nowMonth &amp;&amp; nowMonth &lt; <span class="number">9</span>) &#123;</span><br><span class="line">        quarterStartMonth = <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (nowMonth &gt; <span class="number">8</span>) &#123;</span><br><span class="line">        quarterStartMonth = <span class="number">9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> quarterStartMonth;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获得本周的开始时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getWeekStartDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> weekStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - nowDayOfWeek);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(weekStartDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得本周的结束时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getWeekEndDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> weekEndDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay + (<span class="number">6</span> - nowDayOfWeek), <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">999</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(weekEndDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得上周的开始时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLastWeekStartDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> weekStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - nowDayOfWeek - <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(weekStartDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得上周的结束时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLastWeekEndDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> weekEndDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - nowDayOfWeek - <span class="number">1</span>, <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">999</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(weekEndDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得本月的开始时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getMonthStartDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> monthStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(monthStartDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得本月的结束时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getMonthEndDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> monthEndDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, <span class="title function_">getMonthDays</span>(nowMonth), <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">999</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(monthEndDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得上月开始时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLastMonthStartDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (lastMonth == <span class="number">11</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> lastMonthStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear - <span class="number">1</span>, lastMonth, <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> lastMonthStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, lastMonth, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(lastMonthStartDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得上月结束时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLastMonthEndDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (lastMonth == <span class="number">11</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> lastMonthEndDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear - <span class="number">1</span>, lastMonth, <span class="title function_">getMonthDays</span>(lastMonth), <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">999</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> lastMonthEndDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, lastMonth, <span class="title function_">getMonthDays</span>(lastMonth), <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">999</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(lastMonthEndDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得本季度的开始时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getQuarterStartDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> quarterStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, <span class="title function_">getQuarterStartMonth</span>(), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(quarterStartDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得本季度的结束时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getQuarterEndDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> quarterEndMonth = <span class="title function_">getQuarterStartMonth</span>() + <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">var</span> quarterStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, quarterEndMonth,</span><br><span class="line">        <span class="title function_">getMonthDays</span>(quarterEndMonth), <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(quarterStartDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得昨天的开始时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getYesterdayStartTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> yesterdayStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(yesterdayStartDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得昨天的结束时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getYesterdayEndTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> yesterdayEndDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - <span class="number">1</span>, <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">999</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(yesterdayEndDate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得过去7天的开始时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get7AgoStartTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> sevenDayStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(sevenDayStartDate)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得过去7天的结束时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get7AgoEndTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> sevenDayStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - <span class="number">1</span>, <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">999</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(sevenDayStartDate)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得过去30天的开始时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get30AgoStartTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> sevenDayStartDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - <span class="number">30</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(sevenDayStartDate)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得过去7天的结束时间</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">get30AgoEndTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> sevenDayEndDate = <span class="keyword">new</span> <span class="title class_">Date</span>(nowYear, nowMonth, nowDay - <span class="number">1</span>, <span class="number">23</span>, <span class="number">59</span>, <span class="number">59</span>, <span class="number">999</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">formatDate</span>(sevenDayEndDate)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得本周的开始时间:&#x27;</span> + <span class="title function_">getWeekStartDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得本周的结束时间:&#x27;</span> + <span class="title function_">getWeekEndDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得上周的开始时间:&#x27;</span> + <span class="title function_">getLastWeekStartDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得上周的结束时间:&#x27;</span> + <span class="title function_">getLastWeekEndDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得本月的开始时间:&#x27;</span> + <span class="title function_">getMonthStartDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得本月的结束时间:&#x27;</span> + <span class="title function_">getMonthEndDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得上月开始时间:&#x27;</span> + <span class="title function_">getLastMonthStartDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得上月结束时间:&#x27;</span> + <span class="title function_">getLastMonthEndDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得本季度的开始时间:&#x27;</span> + <span class="title function_">getQuarterStartDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得本季度的结束时间:&#x27;</span> + <span class="title function_">getQuarterEndDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得昨天的开始时间:&#x27;</span> + <span class="title function_">getYesterdayStartTime</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得昨天的结束时间:&#x27;</span> + <span class="title function_">getYesterdayEndTime</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得过去7天的开始时间:&#x27;</span> + <span class="title function_">get7AgoStartTime</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得过去7天的结束时间:&#x27;</span> + <span class="title function_">get7AgoEndTime</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得过去30天的开始时间:&#x27;</span> + <span class="title function_">get30AgoStartTime</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获得过去30天的结束时间:&#x27;</span> + <span class="title function_">get30AgoEndTime</span>())</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
每次网上搜太浪费时间了，一次性整理齐，其他时间段可以推导代码写法。</summary>
    
    
    
    <category term="Web开发" scheme="https://jonssonyan.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="javascript" scheme="https://jonssonyan.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Vue.js工程开发规范</title>
    <link href="https://jonssonyan.com/2023/01/31/Vue.js%E5%B7%A5%E7%A8%8B%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/"/>
    <id>https://jonssonyan.com/2023/01/31/Vue.js%E5%B7%A5%E7%A8%8B%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/</id>
    <published>2023-01-31T15:49:25.000Z</published>
    <updated>2023-02-26T15:15:16.144Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>学习了太多的语言和框架，最终会导致很多语法和规范会搞混，相比较Java和Go统一的文件和文件命名来说，Vue.js的规范更多一些，养成一个好的开发习惯，可以让我们的项目一目了然。<span id="more"></span><h1 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h1><h2 id="组件命名"><a href="#组件命名" class="headerlink" title="组件命名"></a>组件命名</h2><p>全部统一大驼峰（PascalCase）或者肉串（kebab-case）</p><h2 id="文件夹命名"><a href="#文件夹命名" class="headerlink" title="文件夹命名"></a>文件夹命名</h2><p>属于components文件夹下的子文件夹，使用大写字母开头的PascalBase风格，其他文件夹统一使用kebab-case的风格</p><ol><li>全局通用的组件放在 /src/components下</li><li>其他业务页面中的组件，放在各自页面下的 ./components文件夹下</li><li>每个components文件夹下最多只有一层文件夹，且文件夹名称为组件的名称，文件夹下必须有index.vue或index.js，其他.vue文件统一大写开头（Pascalcase），components下的子文件夹名称统一大写开头（PascalCase）</li></ol><h2 id="文件命名"><a href="#文件命名" class="headerlink" title="文件命名"></a>文件命名</h2><ol><li>*.js文件命名规范</li></ol><ul><li>属于类的.js文件，除index.js外，使用PascalBase风格</li><li>其他类型的.js文件，使用kebab-case风格</li><li>属于Api的，统一加上Api后缀</li></ul><ol start="2"><li>*.vue文件命名规范 除index.vue之外，其他.vue文件统一用PascalBase风格</li><li>*.less文件命名规范 统一使用kebab-case命名风格</li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://v2.cn.vuejs.org/v2/style-guide/index.html">vue.js风格指南</a></li><li><a href="https://developer.aliyun.com/article/645697">Vue项目中的文件/文件夹命名规范</a></li><li><a href="https://developer.aliyun.com/article/616973">Vue前端开发规范</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
学习了太多的语言和框架，最终会导致很多语法和规范会搞混，相比较Java和Go统一的文件和文件命名来说，Vue.js的规范更多一些，养成一个好的开发习惯，可以让我们的项目一目了然。</summary>
    
    
    
    <category term="Web开发" scheme="https://jonssonyan.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="vue.js" scheme="https://jonssonyan.com/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>HTML中使用CDN引入形式进行Vue.js+Axios+Echarts+Element+AntDesignVue开发</title>
    <link href="https://jonssonyan.com/2023/01/31/HTML%E4%B8%AD%E4%BD%BF%E7%94%A8CDN%E5%BC%95%E5%85%A5%E5%BD%A2%E5%BC%8F%E8%BF%9B%E8%A1%8CVue.js+Axios+Echarts+Element+AntDesignVue%E5%BC%80%E5%8F%91/"/>
    <id>https://jonssonyan.com/2023/01/31/HTML%E4%B8%AD%E4%BD%BF%E7%94%A8CDN%E5%BC%95%E5%85%A5%E5%BD%A2%E5%BC%8F%E8%BF%9B%E8%A1%8CVue.js+Axios+Echarts+Element+AntDesignVue%E5%BC%80%E5%8F%91/</id>
    <published>2023-01-31T14:12:25.000Z</published>
    <updated>2023-02-26T15:15:16.142Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>不是所有的前端项目都适合使用node.js开发，有时候我们只是进行一些简单页面的开发。比如每次开发javaweb，thymeleaf和freemarker写的很难受，不如vue.js开发来的迅速，而且对于一个有前后端分离开发习惯的人来说，几乎可以无学习成本直接上手。特别在一些公司的老项目中，往往只能使用最原始的jsp形式开发，这是如果在jsp中使用vue.js的形式开发前端，往往事半功倍，还可以避免学习淘汰技术，顺便学习vue.js。<span id="more"></span><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>使用CDN形式引入<code>vue.js</code> <code>axios</code> <code>echarts</code> <code>element ui</code> <code>ant design vue</code></p><p>如果是本地开发，可以将CDN指向的资源文件下载到本地进行引入</p><h2 id="vue-js-2"><a href="#vue-js-2" class="headerlink" title="vue.js 2"></a>vue.js 2</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- vue.js 2.7.14 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@2.7.14/dist/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- element 2.15.12 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/element-ui@2.15.12/lib/theme-chalk/index.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/element-ui@2.15.12/lib/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ant design vue 1.7.8 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/ant-design-vue@1.7.8/dist/antd.min.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/ant-design-vue@1.7.8/dist/antd.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- axios 1.1.2 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios@1.1.2/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- echarts 5.4.1 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/echarts@5.4.1/dist/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="vue-js-3"><a href="#vue-js-3" class="headerlink" title="vue.js 3"></a>vue.js 3</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- vue.js 3.2.45 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3.2.45/dist/vue.global.prod.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- element plus 2.2.28 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/element-plus@2.2.28/dist/index.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/@element-plus/icons-vue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/element-plus@2.2.28&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ant design vue 3.2.15 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/dayjs/dayjs.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/dayjs/plugin/customParseFormat.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/dayjs/plugin/weekday.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/dayjs/plugin/localeData.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/dayjs/plugin/weekOfYear.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/dayjs/plugin/weekYear.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/dayjs/plugin/advancedFormat.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/ant-design-vue@3.2.15/dist/antd.min.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/ant-design-vue@3.2.15/dist/antd.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- axios 1.1.2 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios@1.1.2/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- echarts 5.4.1 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/echarts@5.4.1/dist/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> <span class="title class_">App</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123;createApp, ref, reactive&#125; = <span class="title class_">Vue</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(<span class="title class_">ElementPlus</span>).<span class="title function_">use</span>(antd).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 横向弹性布局 */</span></span><br><span class="line"><span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">flex-flow</span>: row wrap;</span><br><span class="line"><span class="comment">/*去除内边距和外边距*/</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*让边框不占宽度和高度*/</span></span><br><span class="line"><span class="attribute">box-sizing</span>: border-box;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100%</span>;</span><br></pre></td></tr></table></figure><h1 id="相关开发文档"><a href="#相关开发文档" class="headerlink" title="相关开发文档"></a>相关开发文档</h1><ol><li><a href="https://v2.cn.vuejs.org/v2/guide/">vue.js 2</a></li><li><a href="https://cn.vuejs.org/guide/quick-start.html">vue.js 3</a></li><li><a href="https://element.eleme.io/#/zh-CN/component/installation">element</a></li><li><a href="https://element-plus.gitee.io/zh-CN/component/button.html">element plus</a></li><li><a href="https://1x.antdv.com/docs/vue/introduce-cn/">ant design vue 1.7.8</a></li><li><a href="https://antdv.com/components/input-number-cn">ant design vue 3.2.14</a></li><li><a href="https://www.axios-http.cn/docs/intro">axios</a></li><li><a href="https://echarts.apache.org/examples/zh/index.html">echarts</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">css</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
不是所有的前端项目都适合使用node.js开发，有时候我们只是进行一些简单页面的开发。比如每次开发java
web，thymeleaf和freemarker写的很难受，不如vue.js开发来的迅速，而且对于一个有前后端分离开发习惯的人来说，几乎可以无学习成本直接上手。
特别在一些公司的老项目中，往往只能使用最原始的jsp形式开发，这是如果在jsp中使用vue.js的形式开发前端，往往事半功倍，还可以避免学习淘汰技术，顺便学习vue.js。</summary>
    
    
    
    <category term="Web开发" scheme="https://jonssonyan.com/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="vue.js" scheme="https://jonssonyan.com/tags/vue-js/"/>
    
  </entry>
  
  <entry>
    <title>2022年个人总结</title>
    <link href="https://jonssonyan.com/2022/12/31/2022%E5%B9%B4%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    <id>https://jonssonyan.com/2022/12/31/2022%E5%B9%B4%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</id>
    <published>2022-12-31T13:54:09.000Z</published>
    <updated>2023-02-26T15:15:16.142Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><p>2022 年发生的事情太多了，最后几天也没逃过阳的命运，不过听说得过一次就不会再得同类型的毒株，早点晚点都一样。</p><p>工作方面，跳槽了，平台也变大了。总的来说变化比较多，中间有三个月因为其他部门缺人，去支援了一下服务端开发，后来又调了三次项目，本身我对这些是无所谓的，写什么都一样，我是一块砖，哪里需要哪里搬，真正印证了那句话“面试造航母，工作拧螺丝”。前后申请了四十多个系统，你说代码能力提升了多少真没见的，就只积累了一些经验。还是那句话吧，工作的本质是雇佣关系，想要学习真技术还是自己找办法，多参与开源，多投资自己，要是想着靠工作学习到东西，那就玩完了，学习永远是自己的事情。</p><p>个人项目方面，今年最主要的就是写了一个项目，项目从 2021 年 6 月开始构思，2022 年 2 月发布第一个版本，差不多算是更新了一年了，一年下来积累的体量还可以：Docker Hub 150k+ pull，GitHub 800+Star（本来计划 2022 年底能破 1K Star 看看现在的趋势应该达不成了），社区人数1K+，结果还算可以吧，打算持续稳定维护下去。这个应该是一个人完成的最完整项目，从运维到后端开发，再到前端开发，还有推广（做视频）都是一个人完成的，学到了很多。</p><p><img src="https://files.mdnice.com/user/10819/80d71abd-bee2-4c7e-8145-1053d759cbc2.png" alt="2022年我的GitHub提交记录"></p><p>开源方面，个人的开源项目一直处于半开源状态（只开源了自动化部署脚本）。加入的一个开源团队在年初新开了一个项目，但是后来项目没人去跟进迭代了，大家都挺忙的，到了 6月份基本没人管了，靠着广告一直维持。不过前期在队长的头部技术号流量加持下，注册用户也突破了 10 万，GitHub 2K+ 不管项目质量如何，只要有流量数据还是很好看的。</p><p>自媒体方面，因为个人项目的原因，基本所有的业余时间都放到了个人项目的开发，做视频的频率变低了，还有一部分原因是做视频没有什么起色，可能要考虑一下视频定位的问题了，今年做的几个视频都是关于个人项目的介绍。</p><p>考试方面，架构师要三战了，虽然说考了以后证明不了能力多牛，就是想生活有点目标总是好的，丰富一下生活。第一次是 2021 年下半年，论文没过，第二次是 2022 年下半年，论文过了居然上午的选择没过，我也是服了，不过每次考试都只复习 2个星期，结果也是在预期之内。之后考心里就有数了，基本不会畏惧论文 2700 字该怎么写了。</p><p>线下活动方面，参加了支付宝开发者大会，基本上讲的都是文档上的东西。明年准备开发一个可以在线支付的电商系统，也是 2021 年已经构思过了，当时写了个初版但是没有用心打磨业务。</p><p>生活方面，养了一只蓝猫，升级为一名铲屎官，养的不错，快 5 斤了。另外，因为疫情原因 2020 年到现在都没怎么出去，这不 2022 年底国家放开了，希望明年能去远一点地方，看看祖国的大好河山。</p><p><img src="https://files.mdnice.com/user/10819/fb08a4e6-3e8e-49c7-8eec-8bcd9a53f46e.jpg" alt="我家的小阿喵"></p><p>就这些吧，2023 加油！</p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="个人总结" scheme="https://jonssonyan.com/categories/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>Python实现查询域名的IP地址+归属地+备案信息</title>
    <link href="https://jonssonyan.com/2022/12/29/Python%E5%AE%9E%E7%8E%B0%E6%9F%A5%E8%AF%A2%E5%9F%9F%E5%90%8D%E7%9A%84IP%E5%9C%B0%E5%9D%80+%E5%BD%92%E5%B1%9E%E5%9C%B0+%E5%A4%87%E6%A1%88%E4%BF%A1%E6%81%AF/"/>
    <id>https://jonssonyan.com/2022/12/29/Python%E5%AE%9E%E7%8E%B0%E6%9F%A5%E8%AF%A2%E5%9F%9F%E5%90%8D%E7%9A%84IP%E5%9C%B0%E5%9D%80+%E5%BD%92%E5%B1%9E%E5%9C%B0+%E5%A4%87%E6%A1%88%E4%BF%A1%E6%81%AF/</id>
    <published>2022-12-29T14:34:25.000Z</published>
    <updated>2023-02-26T15:34:25.518Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> tld <span class="keyword">import</span> get_fld</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://sp1.baidu.com/8aQDcjqpAAV3otqbppnN2DJv/api.php?query=&#123;&#125;&amp;resource_id=5809&amp;format=json&#x27;</span></span><br><span class="line">record_url = <span class="string">&#x27;https://icp.chinaz.com/&#123;&#125;&#x27;</span></span><br><span class="line">proxies = &#123;<span class="string">&quot;http&quot;</span>: <span class="literal">None</span>, <span class="string">&quot;https&quot;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GetHost</span>:</span><br><span class="line">    <span class="comment"># 域名</span></span><br><span class="line">    domain = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># IP地址</span></span><br><span class="line">    ip = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># IP归属地</span></span><br><span class="line">    location = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 主办单位名称</span></span><br><span class="line">    org_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 主办单位性质</span></span><br><span class="line">    sponsor_nature = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 网站名称</span></span><br><span class="line">    website_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, domain, ip</span>):</span><br><span class="line">        self.domain = domain</span><br><span class="line">        self.ip = ip</span><br><span class="line">        self.get_host_info()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_host_info</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.ip == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            self.ip = socket.gethostbyname(self.domain)</span><br><span class="line">        response = requests.get(url.<span class="built_in">format</span>(self.ip), proxies=proxies)</span><br><span class="line">        json_obj = json.loads(response.text)</span><br><span class="line">        info = json_obj[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">        self.location = info[<span class="number">0</span>][<span class="string">&#x27;location&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> self.domain != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            response = requests.get(record_url.<span class="built_in">format</span>(get_fld(self.domain, fix_protocol=<span class="literal">True</span>)),</span><br><span class="line">                                    proxies=proxies)</span><br><span class="line">            html = etree.HTML(response.content)</span><br><span class="line">            record_info = html.xpath(<span class="string">&#x27;//li[@class=\&#x27;bg-gray clearfix\&#x27;]&#x27;</span>)</span><br><span class="line">            self.org_name = record_info[<span class="number">0</span>].xpath(<span class="string">&#x27;./p/a/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            record_info_1 = html.xpath(<span class="string">&#x27;//li[@class=\&#x27;clearfix\&#x27;]&#x27;</span>)</span><br><span class="line">            self.sponsor_nature = record_info_1[<span class="number">0</span>].xpath(<span class="string">&#x27;./p/strong/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            self.website_name = record_info_1[<span class="number">1</span>].xpath(<span class="string">&#x27;./p/text()&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    host = GetHost(<span class="string">&#x27;www.qq.com&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;域名：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(host.domain))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;IP：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(host.ip))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;归属地：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(host.location))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;主办单位名称：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(host.org_name))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;主办单位性质：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(host.sponsor_nature))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;网站名称：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(host.website_name))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">域名：www<span class="selector-class">.qq</span><span class="selector-class">.com</span></span><br><span class="line">IP：<span class="number">101.91</span>.<span class="number">22.57</span></span><br><span class="line">归属地：上海市 电信</span><br><span class="line">主办单位名称：深圳市腾讯计算机系统有限公司</span><br><span class="line">主办单位性质：企业</span><br><span class="line">网站名称：腾讯网</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="实用工具" scheme="https://jonssonyan.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="python" scheme="https://jonssonyan.com/tags/python/"/>
    
    <category term="socket" scheme="https://jonssonyan.com/tags/socket/"/>
    
    <category term="xpath" scheme="https://jonssonyan.com/tags/xpath/"/>
    
  </entry>
  
  <entry>
    <title>Python实现对特定IP进行端口扫描</title>
    <link href="https://jonssonyan.com/2022/12/28/Python%E5%AE%9E%E7%8E%B0%E5%AF%B9%E7%89%B9%E5%AE%9AIP%E8%BF%9B%E8%A1%8C%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/"/>
    <id>https://jonssonyan.com/2022/12/28/Python%E5%AE%9E%E7%8E%B0%E5%AF%B9%E7%89%B9%E5%AE%9AIP%E8%BF%9B%E8%A1%8C%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F/</id>
    <published>2022-12-28T14:34:25.000Z</published>
    <updated>2023-02-26T15:34:25.513Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> telnetlib</span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用socket</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">socket_scan</span>(<span class="params">host, port</span>):</span><br><span class="line">    conn = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">    conn.settimeout(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn.connect((host, port))</span><br><span class="line">        <span class="built_in">print</span>(host, port, <span class="string">&#x27;is available&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="built_in">print</span>(host, port, <span class="string">&#x27;is not available&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用telnet</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">telnet_scan</span>(<span class="params">host, port</span>):</span><br><span class="line">    t = telnetlib.Telnet()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        t.<span class="built_in">open</span>(host, port, timeout=<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(host, port, <span class="string">&#x27;is available&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="built_in">print</span>(host, port, <span class="string">&#x27;is not available&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        t.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    host = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> port <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">80</span>, <span class="number">90</span>):</span><br><span class="line">        socket_scan(host, port)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 80 is not available</span><br><span class="line">127.0.0.1 81 is not available</span><br><span class="line">127.0.0.1 82 is not available</span><br><span class="line">127.0.0.1 83 is not available</span><br><span class="line">127.0.0.1 84 is not available</span><br><span class="line">127.0.0.1 85 is not available</span><br><span class="line">127.0.0.1 86 is not available</span><br><span class="line">127.0.0.1 87 is not available</span><br><span class="line">127.0.0.1 88 is not available</span><br><span class="line">127.0.0.1 89 is not available</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="实用工具" scheme="https://jonssonyan.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="python" scheme="https://jonssonyan.com/tags/python/"/>
    
    <category term="telnet" scheme="https://jonssonyan.com/tags/telnet/"/>
    
    <category term="socket" scheme="https://jonssonyan.com/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>查看Linux服务器的客户端连接情况</title>
    <link href="https://jonssonyan.com/2022/12/28/%E6%9F%A5%E7%9C%8BLinux%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BF%9E%E6%8E%A5%E6%83%85%E5%86%B5/"/>
    <id>https://jonssonyan.com/2022/12/28/%E6%9F%A5%E7%9C%8BLinux%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BF%9E%E6%8E%A5%E6%83%85%E5%86%B5/</id>
    <published>2022-12-28T14:34:25.000Z</published>
    <updated>2023-02-26T15:15:16.148Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>Shell实现服务器客户端连接数统计<span id="more"></span><h1 id="安装net-tools"><a href="#安装net-tools" class="headerlink" title="安装net-tools"></a>安装net-tools</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install net-tools</span><br></pre></td></tr></table></figure><h1 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nt | tail -n +3 | awk -F &quot;[ :]+&quot; -v OFS=&quot;&quot; &#x27;&#123;printf(&quot;%45s =&gt; %s:%-5s\n&quot;,$6,$4,$5)&#125;&#x27; | sort | uniq -c | sort -rn</span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li><a href="https://www.runoob.com/linux/linux-comm-netstat.html">netstat -nt</a>: 查看客户端链接情况</li><li><a href="https://www.runoob.com/linux/linux-comm-tail.html">tail -n +3</a>: 从第3行（包括）开始显示</li><li><a href="https://www.runoob.com/linux/linux-comm-awk.html">awk -F “[ :]+”</a>: 指定文件的分隔符为一个或多个的空格或冒号</li><li><a href="https://www.runoob.com/linux/linux-comm-awk.html">-v OFS=””</a>: 设置变量OFS（输出字段分隔符）为””</li><li><a href="https://www.runoob.com/linux/linux-comm-awk.html">{printf(“%45s =&gt; %s:%-5s\n”,$6,$4,$5)}</a>: 格式化输出结果</li><li><a href="https://www.runoob.com/linux/linux-comm-uniq.html">sort | uniq -c</a>: 去重并显示重复出现的次数，即端口连接数（uniq只会去重相邻的，所以使用前必须使用sort）</li><li><a href="https://www.runoob.com/linux/linux-comm-sort.html">sort -rn</a>: 端口连接数从大到小排序</li></ul><h1 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h1><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">3                                 61.177.173.22 =&gt; 66.42.76.76:22   </span><br><span class="line">3                                36.154.116.131 =&gt; 66.42.76.76:22   </span><br><span class="line">3                                     127.0.0.1 =&gt; 127.0.0.1:9507 </span><br><span class="line">2                                     127.0.0.1 =&gt; 127.0.0.1:6378 </span><br><span class="line">1                                     127.0.0.1 =&gt; 127.0.0.1:53870</span><br><span class="line">1                                     127.0.0.1 =&gt; 127.0.0.1:51814</span><br><span class="line">1                                     127.0.0.1 =&gt; 127.0.0.1:47646</span><br><span class="line">1                                     127.0.0.1 =&gt; 127.0.0.1:40952</span><br><span class="line">1                                     127.0.0.1 =&gt; 127.0.0.1:33292</span><br></pre></td></tr></table></figure><p>从输入结果我们可以看到有哪些IP连接了我们的服务器，并且可以看到连接的数量和连接的端口</p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
Shell实现服务器客户端连接数统计</summary>
    
    
    
    <category term="DevOps" scheme="https://jonssonyan.com/categories/DevOps/"/>
    
    
    <category term="linux" scheme="https://jonssonyan.com/tags/linux/"/>
    
    <category term="awk" scheme="https://jonssonyan.com/tags/awk/"/>
    
    <category term="netstat" scheme="https://jonssonyan.com/tags/netstat/"/>
    
  </entry>
  
  <entry>
    <title>使用iptables动态映射Docker容器端口</title>
    <link href="https://jonssonyan.com/2022/08/31/%E4%BD%BF%E7%94%A8iptables%E5%8A%A8%E6%80%81%E6%98%A0%E5%B0%84Docker%E5%AE%B9%E5%99%A8%E7%AB%AF%E5%8F%A3/"/>
    <id>https://jonssonyan.com/2022/08/31/%E4%BD%BF%E7%94%A8iptables%E5%8A%A8%E6%80%81%E6%98%A0%E5%B0%84Docker%E5%AE%B9%E5%99%A8%E7%AB%AF%E5%8F%A3/</id>
    <published>2022-08-31T15:20:46.000Z</published>
    <updated>2023-02-26T15:15:16.147Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><h1 id="0x0-安装-telnet"><a href="#0x0-安装-telnet" class="headerlink" title="0x0. 安装 telnet"></a>0x0. 安装 telnet</h1><blockquote><p>telnet 介绍：<a href="https://zh.wikipedia.org/wiki/Telnet">https://zh.wikipedia.org/wiki/Telnet</a></p></blockquote><p>本文用于测试指定端口是否开放，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet [ip] [port]</span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li>ip：ip 地址</li><li>port：端口</li></ul><p>如果指定端口开放则结果如下：</p><p><img src="https://img-blog.csdnimg.cn/e2206ee7da2c4059ae4f893ce14fa8ee.png" alt="telnet"></p><p>如果指定端口未开放则结果如下：</p><p><img src="https://img-blog.csdnimg.cn/03c3e866369d4b6491dfb8d220711216.png" alt="telnet"></p><p><strong>PS：可以通过快捷键 ctrl+]退出连接，然后输入 q 退出 telnet</strong></p><h1 id="0x1-安装-Docker"><a href="#0x1-安装-Docker" class="headerlink" title="0x1. 安装 Docker"></a>0x1. 安装 Docker</h1><blockquote><p>Docker 官方安装文档：<a href="https://docs.docker.com/engine/install/">https://docs.docker.com/engine/install/</a></p></blockquote><h1 id="0x2-实战"><a href="#0x2-实战" class="headerlink" title="0x2. 实战"></a>0x2. 实战</h1><p><strong>目标：开放 js-redis 容器的 443 端口</strong></p><p>如下图所示，容器名称为 js-redis，仅映射了 6378 =&gt; 6379</p><p><img src="https://img-blog.csdnimg.cn/60149c9c8999451da0a6daae2219173e.png" alt="dockerps"></p><p>使用以下命令进行动态映射 Docker 容器的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A DOCKER -p tcp --dport <span class="variable">$&#123;宿主机端口&#125;</span> -j DNAT --to-dest <span class="variable">$&#123;容器ip&#125;</span>:<span class="variable">$&#123;容器端口&#125;</span></span><br><span class="line">iptables -t nat -A POSTROUTING -p tcp -s <span class="variable">$&#123;容器ip&#125;</span> -d <span class="variable">$&#123;容器ip&#125;</span> -dport <span class="variable">$&#123;容器端口&#125;</span> -j MASQUERADE</span><br><span class="line">iptables -A DOCKER -p tcp -d <span class="variable">$&#123;容器ip&#125;</span> --dport <span class="variable">$&#123;容器端口&#125;</span> -j ACCEPT</span><br></pre></td></tr></table></figure><p>我们映射 js-redis 容器的 8081 =&gt; 8082</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A DOCKER -p tcp --dport 8081 -j DNAT --to-dest 172.18.0.4:8082</span><br><span class="line">iptables -t nat -A POSTROUTING -p tcp -s 172.18.0.4 -d 172.18.0.4 -dport 8082 -j MASQUERADE</span><br><span class="line">iptables -A DOCKER -p tcp -d 172.18.0.4 --dport 8888 -j ACCEPT</span><br></pre></td></tr></table></figure><p><strong>补充：</strong></p><ol><li>iptables 其他常用命令：</li></ol><ul><li>列出 Dcoker 已设置的规则，带行号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -vnL DOCKER --line-number</span><br></pre></td></tr></table></figure><ul><li>根据行号删除规则</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -D DOCKER 3</span><br></pre></td></tr></table></figure><ol start="2"><li>查看容器 ip 命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect [容器<span class="built_in">id</span>或者容器名称] | grep IPAddress</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/6605fb83ca62437ebb9baadd25557da0.png" alt="在这里插入图片描述"></p><h1 id="0x3-参考"><a href="#0x3-参考" class="headerlink" title="0x3. 参考"></a>0x3. 参考</h1><ol><li><a href="https://wangchujiang.com/linux-command/c/iptables.html">iptables</a></li><li><a href="https://docs.docker.com/network/iptables/">Docker and iptables</a></li><li><a href="https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container">How do I assign a port mapping to an existing Docker container?</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://jonssonyan.com/categories/DevOps/"/>
    
    
    <category term="docker" scheme="https://jonssonyan.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>玩转微服务之gRPC快速入门</title>
    <link href="https://jonssonyan.com/2022/08/23/%E7%8E%A9%E8%BD%AC%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8BgRPC%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>https://jonssonyan.com/2022/08/23/%E7%8E%A9%E8%BD%AC%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8BgRPC%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</id>
    <published>2022-08-23T12:30:25.000Z</published>
    <updated>2023-03-01T15:02:29.669Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>通过一个简单的Demo快速入门gRPC<span id="more"></span><h1 id="0x0-Demo结构"><a href="#0x0-Demo结构" class="headerlink" title="0x0. Demo结构"></a>0x0. Demo结构</h1><p><img src="https://files.mdnice.com/user/10819/f80ff1dd-1246-45fc-a5aa-121064740550.png" alt="目录结构"></p><p>依赖参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">module grpc-example</span><br><span class="line"></span><br><span class="line">go 1.18</span><br><span class="line"></span><br><span class="line">require (</span><br><span class="line">github.com/golang/protobuf v1.5.2 // indirect</span><br><span class="line">golang.org/x/net v0.0.0-20201021035429-f5854403a974 // indirect</span><br><span class="line">golang.org/x/sys v0.0.0-20210119212857-b64e53b001e4 // indirect</span><br><span class="line">golang.org/x/text v0.3.3 // indirect</span><br><span class="line">google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013 // indirect</span><br><span class="line">google.golang.org/grpc v1.48.0 // indirect</span><br><span class="line">google.golang.org/grpc/cmd/protoc-gen-go-grpc v1.2.0 // indirect</span><br><span class="line">google.golang.org/protobuf v1.28.1 // indirect</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="0x1-环境准备"><a href="#0x1-环境准备" class="headerlink" title="0x1. 环境准备"></a>0x1. 环境准备</h1><ol><li>安装依赖</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get google.golang.org/grpc</span><br></pre></td></tr></table></figure><ol start="2"><li>安装插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go install google.golang.org/protobuf/cmd/protoc-gen-go@latest // 用于生成*.pb.go文件</span><br><span class="line">go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest // 用于生成*_grpc.pb.go文件</span><br></pre></td></tr></table></figure><h1 id="0x2-安装protoc编译器"><a href="#0x2-安装protoc编译器" class="headerlink" title="0x2. 安装protoc编译器"></a>0x2. 安装protoc编译器</h1><blockquote><p>protobuf GitHub：<a href="https://github.com/protocolbuffers/protobuf/releases">https://github.com/protocolbuffers/protobuf/releases</a></p></blockquote><p>安装好之后将bin文件夹添加至环境变量</p><h1 id="0x3-编写proto文件"><a href="#0x3-编写proto文件" class="headerlink" title="0x3. 编写proto文件"></a>0x3. 编写proto文件</h1><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个就是protobuf的中间文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定的当前proto语法的版本，有2和3</span></span><br><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定包位置和名称</span></span><br><span class="line"><span class="keyword">option</span> go_package = <span class="string">&quot;.;api&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法</span></span><br><span class="line"><span class="keyword">service </span><span class="title class_">MessageSender</span> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">rpc</span> Send(MessageRequest) <span class="keyword">returns</span> (MessageResponse) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应体</span></span><br><span class="line"><span class="keyword">message </span><span class="title class_">MessageResponse</span> &#123;</span><br><span class="line">  <span class="type">string</span> responseSomething = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求体</span></span><br><span class="line"><span class="keyword">message </span><span class="title class_">MessageRequest</span> &#123;</span><br><span class="line">  <span class="type">string</span> saySomething = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0x4-生成代码"><a href="#0x4-生成代码" class="headerlink" title="0x4. 生成代码"></a>0x4. 生成代码</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 进入proto文件所在的文件夹</span><br><span class="line"><span class="built_in">cd</span> ./server/api</span><br><span class="line">// 自动生成代码</span><br><span class="line">protoc --go_out=. --go-grpc_out=. *.proto</span><br></pre></td></tr></table></figure><p>运行过后，<code>server/api</code>文件夹内会多两个文件，<code>*pb.go</code>和<code>*_grpc.pb.go</code></p><h1 id="0x5-Client"><a href="#0x5-Client" class="headerlink" title="0x5. Client"></a>0x5. Client</h1><p><code>client/client.go</code>文件内容如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-example/server/api&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := grpc.Dial(fmt.Sprintf(<span class="string">&quot;127.0.0.1:%d&quot;</span>, <span class="number">8082</span>), grpc.WithInsecure())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">client := api.NewMessageSenderClient(conn)</span><br><span class="line">send, err := client.Send(context.Background(), &amp;api.MessageRequest&#123;</span><br><span class="line">SaySomething: <span class="string">&quot;你好!&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(send.ResponseSomething)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0x6-Server"><a href="#0x6-Server" class="headerlink" title="0x6. Server"></a>0x6. Server</h1><p><code>server/api/api.go</code>文件内容如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> api</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ServerApi <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *ServerApi)</span></span> mustEmbedUnimplementedMessageSenderServer() &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;implement me&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *ServerApi)</span></span> Send(ctx context.Context, request *MessageRequest) (*MessageResponse, <span class="type">error</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;MessageResponse&#123;ResponseSomething: fmt.Sprintf(<span class="string">&quot;收到了，你说的是：%s&quot;</span>, request.GetSaySomething())&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>server/server.go</code>文件内容如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"><span class="string">&quot;grpc-example/server/api&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 1. new一个grpc的server</span></span><br><span class="line">rpcServer := grpc.NewServer()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 将刚刚我们新建的ProdService注册进去</span></span><br><span class="line">api.RegisterMessageSenderServer(rpcServer, <span class="built_in">new</span>(api.ServerApi))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 新建一个listener，以tcp方式监听8082端口</span></span><br><span class="line">listener, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8082&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">&quot;服务监听端口失败&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 运行rpcServer，传入listener</span></span><br><span class="line">_ = rpcServer.Serve(listener)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="0x7-运行"><a href="#0x7-运行" class="headerlink" title="0x7. 运行"></a>0x7. 运行</h1><p>首先运行<code>server/server.go</code>然后运行<code>client/client.go</code>，运行效果如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GOROOT=D:\Applications\Go <span class="comment">#gosetup</span></span><br><span class="line">GOPATH= <span class="comment">#gosetup</span></span><br><span class="line">D:\Applications\Go\bin\go.exe build -o C:\Windows\Temp\GoLand\___go_build_grpc_example_client.exe grpc-example/client <span class="comment">#gosetup</span></span><br><span class="line">C:\Windows\Temp\GoLand\___go_build_grpc_example_client.exe</span><br><span class="line">收到了，你说的是：你好!</span><br><span class="line"></span><br><span class="line">Process finished with the <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
通过一个简单的Demo快速入门gRPC</summary>
    
    
    
    <category term="微服务" scheme="https://jonssonyan.com/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="golang" scheme="https://jonssonyan.com/tags/golang/"/>
    
    <category term="gRPC" scheme="https://jonssonyan.com/tags/gRPC/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7部署K8s集群</title>
    <link href="https://jonssonyan.com/2022/07/18/CentOS7%E9%83%A8%E7%BD%B2K8s%E9%9B%86%E7%BE%A4/"/>
    <id>https://jonssonyan.com/2022/07/18/CentOS7%E9%83%A8%E7%BD%B2K8s%E9%9B%86%E7%BE%A4/</id>
    <published>2022-07-18T01:54:09.000Z</published>
    <updated>2023-04-15T14:36:03.799Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>K8s+Istio+Golang = 微服务+服务网格+云原生<span id="more"></span><h1 id="0x0-环境准备"><a href="#0x0-环境准备" class="headerlink" title="0x0. 环境准备"></a>0x0. 环境准备</h1><p>本文服务器的公网IP：192.168.56.101</p><ul><li>OS version: CentOS 7</li><li>CPU Architecture: x86_64/amd64</li><li>K8s version: v1.23.17</li><li>Docker version: 20.10.23</li></ul><h1 id="0x1-安装依赖"><a href="#0x1-安装依赖" class="headerlink" title="0x1. 安装依赖"></a>0x1. 安装依赖</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install -y \</span><br><span class="line">    curl \</span><br><span class="line">    wget \</span><br><span class="line">    systemd \</span><br><span class="line">    bash-completion \</span><br><span class="line">    lrzsz</span><br></pre></td></tr></table></figure><h1 id="0x2-安装前准备"><a href="#0x2-安装前准备" class="headerlink" title="0x2. 安装前准备"></a>0x2. 安装前准备</h1><ol><li>同步服务器时间</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai &amp;&amp; timedatectl set-local-rtc 0</span><br><span class="line">systemctl restart rsyslog</span><br><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure><ol start="2"><li>修改主机名</li></ol><p>方便通过主机名访问对于的服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">主节点</span></span><br><span class="line">hostnamectl set-hostname k8s-master</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">从节点</span></span><br><span class="line">hostnamectl set-hostname k8s-node1</span><br><span class="line">hostnamectl set-hostname k8s-node2</span><br></pre></td></tr></table></figure><p>修改hosts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt;/etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">192.168.56.101    k8s-master</span></span><br><span class="line"><span class="string">192.168.56.102    k8s-node1</span></span><br><span class="line"><span class="string">192.168.56.103    k8s-node2</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><ol start="3"><li>开启必要的端口</li></ol><ul><li><p><a href="https://kubernetes.io/zh-cn/docs/reference/networking/ports-and-protocols/">开启端口</a></p></li><li><p>直接关闭防火墙</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld.service &amp;&amp; systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h1 id="0x3-容器运行时"><a href="#0x3-容器运行时" class="headerlink" title="0x3. 容器运行时"></a>0x3. 容器运行时</h1><ol><li>转发IPv4并让iptables看到桥接流量</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;/etc/modules-load.d/k8s.conf &lt;&lt;EOF</span><br><span class="line">overlay</span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br><span class="line">modprobe overlay</span><br><span class="line">modprobe br_netfilter</span><br><span class="line"></span><br><span class="line">cat &gt;/etc/sysctl.d/k8s.conf &lt;&lt;EOF</span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过运行以下指令确认 br_netfilter 和 overlay 模块被加载</span></span><br><span class="line">lsmod | egrep &#x27;overlay|br_netfilter&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过运行以下指令确认 net.bridge.bridge-nf-call-iptables、net.bridge.bridge-nf-call-ip6tables 系统变量在你的 sysctl 配置中被设置为 1</span></span><br><span class="line">sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward</span><br></pre></td></tr></table></figure><ol start="2"><li>安装容器运行时</li></ol><p><strong>注意：k8s v1.24及以后不在支持Docker Engine</strong></p><ul><li>安装Docker</li></ul><blockquote><p><a href="https://docs.docker.com/engine/install/centos/">Install Docker Engine on CentOS</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置yum阿里云镜像</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">mkdir -p /etc/docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置阿里云镜像/日志/cgroup驱动</span></span><br><span class="line">cat &gt;/etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">&quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">&quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">&quot;log-opts&quot;: &#123;</span><br><span class="line">  &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">&quot;storage-opts&quot;: [</span><br><span class="line">  &quot;overlay2.override_kernel_check=true&quot;</span><br><span class="line">],</span><br><span class="line">&quot;registry-mirrors&quot;:[&quot;https://hub-mirror.c.163.com&quot;,&quot;https://docker.mirrors.ustc.edu.cn&quot;,&quot;https://registry.docker-cn.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">yum makecache fast</span><br><span class="line">yum install -y docker-ce-20.10.23 docker-ce-cli-20.10.23 containerd.io</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable docker &amp;&amp; systemctl restart docker</span><br></pre></td></tr></table></figure><ul><li>安装containerd</li></ul><blockquote><p><a href="https://kubernetes.io/zh-cn/docs/setup/production-environment/container-runtimes/">container-runtimes</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum makecache fast</span><br><span class="line">yum install -y containerd.io</span><br><span class="line">mkdir -p /etc/containerd</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成默认文件</span></span><br><span class="line">containerd config default &gt; /etc/containerd/config.toml</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑配置文件 设置驱动方式为systemd 设置pause镜像 镜像仓库的加速器</span></span><br><span class="line">sed -i &quot;s#SystemdCgroup = false#SystemdCgroup = true#g&quot; /etc/containerd/config.toml</span><br><span class="line">sed -i &quot;s#registry.k8s.io#registry.cn-hangzhou.aliyuncs.com/google_containers#g&quot; /etc/containerd/config.toml</span><br><span class="line">sed -i &quot;/\[plugins.\&quot;io.containerd.grpc.v1.cri\&quot;.registry.mirrors\]/a\        [plugins.\&quot;io.containerd.grpc.v1.cri\&quot;.registry.mirrors.\&quot;docker.io\&quot;]&quot; /etc/containerd/config.toml</span><br><span class="line">sed -i &quot;/\[plugins.\&quot;io.containerd.grpc.v1.cri\&quot;.registry.mirrors.\&quot;docker.io\&quot;\]/a\          endpoint = [\&quot;https://hub-mirror.c.163.com\&quot;,\&quot;https://docker.mirrors.ustc.edu.cn\&quot;,\&quot;https://registry.docker-cn.com\&quot;]&quot; /etc/containerd/config.toml</span><br><span class="line">sed -i &quot;/endpoint = \[\&quot;https:\/\/hub-mirror.c.163.com\&quot;,\&quot;https:\/\/docker.mirrors.ustc.edu.cn\&quot;,\&quot;https:\/\/registry.docker-cn.com\&quot;]/a\        [plugins.\&quot;io.containerd.grpc.v1.cri\&quot;.registry.mirrors.\&quot;registry.k8s.io\&quot;]&quot; /etc/containerd/config.toml</span><br><span class="line">sed -i &quot;/\[plugins.\&quot;io.containerd.grpc.v1.cri\&quot;.registry.mirrors.\&quot;registry.k8s.io\&quot;\]/a\          endpoint = [\&quot;registry.cn-hangzhou.aliyuncs.com/google_containers\&quot;]&quot; /etc/containerd/config.toml</span><br><span class="line">sed -i &quot;/endpoint = \[\&quot;registry.cn-hangzhou.aliyuncs.com\/google_containers\&quot;]/a\        [plugins.\&quot;io.containerd.grpc.v1.cri\&quot;.registry.mirrors.\&quot;k8s.gcr.io\&quot;]&quot; /etc/containerd/config.toml</span><br><span class="line">sed -i &quot;/\[plugins.\&quot;io.containerd.grpc.v1.cri\&quot;.registry.mirrors.\&quot;k8s.gcr.io\&quot;\]/a\          endpoint = [\&quot;registry.cn-hangzhou.aliyuncs.com/google_containers\&quot;]&quot; /etc/containerd/config.toml</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable containerd &amp;&amp; systemctl restart containerd</span><br></pre></td></tr></table></figure><h1 id="0x4-安装k8s"><a href="#0x4-安装k8s" class="headerlink" title="0x4. 安装k8s"></a>0x4. 安装k8s</h1><blockquote><p><a href="https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/">kubeadm init</a></p><p><a href="https://kubernetes.io/zh-cn/docs/reference/command-line-tools-reference/kubelet/">kubelet</a></p></blockquote><ol><li>关闭swap分区或者禁用swap文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a &amp;&amp; sed -ri &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab</span><br></pre></td></tr></table></figure><ol start="2"><li>关闭selinux</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0 &amp;&amp; sed -i &#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27; /etc/selinux/config</span><br></pre></td></tr></table></figure><ol start="3"><li>安装k8s</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用阿里云k8s源</span></span><br><span class="line">cat &gt;/etc/yum.repos.d/kubernetes.repo &lt;&lt;EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装工具kubelet、kubeadm、kubectl</span></span><br><span class="line">yum install -y kubelet-1.23.17 kubeadm-1.23.17 kubectl-1.23.17 --disableexcludes=kubernetes</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置驱动方式为systemd</span></span><br><span class="line">cat &gt;/etc/sysconfig/kubelet &lt;&lt;EOF</span><br><span class="line">KUBELET_EXTRA_ARGS=&quot;--cgroup-driver=systemd&quot;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置容器运行时（仅容器运行时为containerd才需要进行以下设置，容器运行时为Docker则不需要）</span></span><br><span class="line">crictl config runtime-endpoint unix:///var/run/containerd/containerd.sock</span><br><span class="line">crictl config image-endpoint unix:///var/run/containerd/containerd.sock</span><br><span class="line">sed -i &#x27;/KUBELET_KUBEADM_ARGS/s/&quot;$/ --container-runtime=remote --container-runtime-endpoint=unix:\/\/\/run\/containerd\/containerd.sock&quot;/&#x27; /var/lib/kubelet/kubeadm-flags.env</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">kubelet开机自启</span></span><br><span class="line">systemctl enable --now kubelet</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看kubelet状态</span></span><br><span class="line">systemctl status kubelet</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果报错，查询错误信息</span></span><br><span class="line">journalctl -xe</span><br></pre></td></tr></table></figure><h1 id="0x5-运行k8s"><a href="#0x5-运行k8s" class="headerlink" title="0x5. 运行k8s"></a>0x5. 运行k8s</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /k8sdata/log/</span><br><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address=192.168.56.101 \</span><br><span class="line">  --image-repository=registry.cn-hangzhou.aliyuncs.com/google_containers \</span><br><span class="line">  --kubernetes-version=v1.23.17 \</span><br><span class="line">  --service-cidr=10.96.0.0/12 \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16 | tee /k8sdata/log/kubeadm-init.log</span><br><span class="line"></span><br><span class="line">mkdir -p &quot;$HOME&quot;/.kube</span><br><span class="line">cp -i /etc/kubernetes/admin.conf &quot;$HOME&quot;/.kube/config</span><br><span class="line">chown &quot;$(id -u)&quot;:&quot;$(id -g)&quot; &quot;$HOME&quot;/.kube/config</span><br></pre></td></tr></table></figure><p>提示：</p><ol><li>如果是搭建的服务器是主节点，则服务器至少2核2G，如果没有达到该配置但是仍想安装，则可以在<code>kubeadm init</code>命令行中使用<code>–ignore-preflight-errors=CpuNum</code>即可忽略报错。</li><li>如果初始化失败，通过<code>kubeadm reset</code>进行重设</li></ol><h1 id="0x6-安装网络系统"><a href="#0x6-安装网络系统" class="headerlink" title="0x6. 安装网络系统"></a>0x6. 安装网络系统</h1><ul><li>flannel</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /k8sdata/network/</span><br><span class="line">wget --no-check-certificate -O /k8sdata/network/flannelkube-flannel.yml https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line">kubectl create -f /k8sdata/network/flannelkube-flannel.yml</span><br></pre></td></tr></table></figure><ul><li>calico</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /k8sdata/network/</span><br><span class="line">wget --no-check-certificate -O /k8sdata/network/calico.yml https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line">kubectl create -f /k8sdata/network/calico.yml</span><br></pre></td></tr></table></figure><h1 id="0x7-k8s命令行补全"><a href="#0x7-k8s命令行补全" class="headerlink" title="0x7. k8s命令行补全"></a>0x7. k8s命令行补全</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">! grep -q kubectl &quot;$HOME/.bashrc&quot; &amp;&amp; echo &quot;source /usr/share/bash-completion/bash_completion&quot; &gt;&gt;&quot;$HOME/.bashrc&quot;</span><br><span class="line">! grep -q kubectl &quot;$HOME/.bashrc&quot; &amp;&amp; echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt;&quot;$HOME/.bashrc&quot;</span><br><span class="line">! grep -q kubeadm &quot;$HOME/.bashrc&quot; &amp;&amp; echo &quot;source &lt;(kubeadm completion bash)&quot; &gt;&gt;&quot;$HOME/.bashrc&quot;</span><br><span class="line">! grep -q crictl &quot;$HOME/.bashrc&quot; &amp;&amp; echo &quot;source &lt;(crictl completion bash)&quot; &gt;&gt;&quot;$HOME/.bashrc&quot;</span><br><span class="line">source &quot;$HOME/.bashrc&quot;</span><br></pre></td></tr></table></figure><h1 id="0x8-k8s常用命令"><a href="#0x8-k8s常用命令" class="headerlink" title="0x8. k8s常用命令"></a>0x8. k8s常用命令</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取节点</span></span><br><span class="line">kubectl get nodes -o wide</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">实时查询nodes状态</span></span><br><span class="line">watch kubectl get nodes -o wide</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取pod</span></span><br><span class="line">kubectl get pods --all-namespaces -o wide</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看镜像列表</span></span><br><span class="line">kubeadm config images list</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">节点加入集群</span></span><br><span class="line">kubeadm token create --print-join-command</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">描述node</span></span><br><span class="line">kubectl describe node k8s-master</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">描述pod</span></span><br><span class="line">kubectl describe pod kube-flannel-ds-hs8bq --namespace=kube-flannel</span><br></pre></td></tr></table></figure><h1 id="0x9-总结"><a href="#0x9-总结" class="headerlink" title="0x9. 总结"></a>0x9. 总结</h1><p>按照本教程可以部署一个可以正常运行的k8s，但本文仍存在一些待优化的地方，如在部署或者使用过程中遇到问题会在本文进行补充。</p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
K8s+Istio+Golang = 微服务+服务网格+云原生</summary>
    
    
    
    <category term="DevOps" scheme="https://jonssonyan.com/categories/DevOps/"/>
    
    
    <category term="k8s" scheme="https://jonssonyan.com/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>玩转微服务之Nacos</title>
    <link href="https://jonssonyan.com/2022/06/20/%E7%8E%A9%E8%BD%AC%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8BNacos/"/>
    <id>https://jonssonyan.com/2022/06/20/%E7%8E%A9%E8%BD%AC%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8BNacos/</id>
    <published>2022-06-20T15:30:40.000Z</published>
    <updated>2023-02-26T15:33:28.719Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><p>本文主要介绍 Nacos，它是阿里巴巴开源的管理微服务的平台，在国内很多公司都在使用 Nacos作为微服务的注册中心和全局配置中心，而且它在国内的中文文档比较丰富，比较是国产开源的，而且背后有阿里撑腰，目前软件还是一直在更新当中，于是我就开始学习 Nacos，全局配置管理和配置共享这两个功能还是很实用的。废话不多说，开始今天的教程。</p><h1 id="0x0-介绍"><a href="#0x0-介绍" class="headerlink" title="0x0. 介绍"></a>0x0. 介绍</h1><p>Nacos 主要作用有 2 个</p><ol><li>实现服务注册与发现</li><li>作为配置中心</li></ol><h1 id="0x1-安装-Nacos"><a href="#0x1-安装-Nacos" class="headerlink" title="0x1. 安装 Nacos"></a>0x1. 安装 Nacos</h1><p>本文使用的是 Docker 部署 Nacos。</p><blockquote><p>Docker Hub nacos-server: <a href="https://hub.docker.com/r/nacos/nacos-server">https://hub.docker.com/r/nacos/nacos-server</a></p></blockquote><p>Nacos 单节点版运行命令如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name forum-nacos -e MODE=standalone -p 8848:8848 --restart=always -d nacos/nacos-server</span><br></pre></td></tr></table></figure><p>参数解释</p><ul><li><strong>–name</strong> 容器的名称</li><li><strong>–name</strong> 容器的名称</li><li><strong>-e</strong> 传入参数</li><li><strong>-p</strong> 映射端口</li><li><strong>–restart=always</strong> 随着 Docker 启动而启动</li><li><strong>-d</strong> 后台运行</li></ul><p>运行好之后，访问<code>http://Nacos服务器的IP:8848/nacos</code>就可以访问 Nacos 控制台。</p><h1 id="0x2-Nacos-实现服务注册与发现"><a href="#0x2-Nacos-实现服务注册与发现" class="headerlink" title="0x2. Nacos 实现服务注册与发现"></a>0x2. Nacos 实现服务注册与发现</h1><h2 id="1-服务提供者-生产者"><a href="#1-服务提供者-生产者" class="headerlink" title="1. 服务提供者(生产者)"></a>1. 服务提供者(生产者)</h2><ol><li><p>新建一个名称为: <code>nacos-discovery-consumer</code>的 Spring Boot 工程。</p></li><li><p>引入依赖</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在主类上添加<code>@EnableDiscoveryClient</code>注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NacosDiscoveryProviderApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(NacosDiscoveryProviderApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>配置服务名称和 Nacos 地址</li></ol><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">nacos-discovery-consumer</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"><span class="comment"># nacos认证信息</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.username</span>=<span class="string">nacos</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.password</span>=<span class="string">nacos</span></span><br></pre></td></tr></table></figure><ol start="5"><li>启动应用，打开 Nacos 控制台-&gt;服务管理-&gt;服务列表</li></ol><h2 id="2-服务消费者-消费者"><a href="#2-服务消费者-消费者" class="headerlink" title="2. 服务消费者(消费者)"></a>2. 服务消费者(消费者)</h2><ol><li><p>新建一个名称为: <code>nacos-discovery-consumer</code>的 Spring Boot 工程。</p></li><li><p>引入依赖</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>在主类上添加<code>@EnableDiscoveryClient</code>注解</p></li><li><p>配置服务名称和 Nacos 地址</p></li></ol><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">9023</span></span><br><span class="line"><span class="attr">server.servlet.context-path</span>=<span class="string">/provider</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">service-provider</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br><span class="line"><span class="comment"># nacos认证信息</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.username</span>=<span class="string">nacos</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.password</span>=<span class="string">nacos</span></span><br></pre></td></tr></table></figure><h2 id="3-消费者调用生产者接口"><a href="#3-消费者调用生产者接口" class="headerlink" title="3. 消费者调用生产者接口"></a>3. 消费者调用生产者接口</h2><ol><li>在<code>provider</code>工程中添加一个测试接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/echo/&#123;str&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">echo</span><span class="params">(<span class="meta">@PathVariable</span> String str)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello Nacos Discovery &quot;</span> + str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在<code>consumer</code>工程中调用接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/echo/&#123;str&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">echo</span><span class="params">(<span class="meta">@PathVariable</span> String str)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://service-provider/provider/echo/&quot;</span> + str, String.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>请求消费者的接口，消费者会调用生产者的接口</li></ol><h1 id="0x3-Nacos-作为配置中心"><a href="#0x3-Nacos-作为配置中心" class="headerlink" title="0x3. Nacos 作为配置中心"></a>0x3. Nacos 作为配置中心</h1><p>进入 Nacos 的控制页面，在配置列表功能页面中，点击右上角的 <strong>+</strong> 按钮，进入<strong>新建配置</strong>页面，如下图填写内容：</p><p><img src="https://files.mdnice.com/user/10819/386ec27f-c8bd-468a-9137-7987a6e42112.png"></p><p>新建 Spring Boot 项目并引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>resources</code>新建<code>bootstrap.properties</code>(文件名称必须是 bootstrap，文件类型可以是.properties 或者.yaml)，文件内容如下:</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">forum-service</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br></pre></td></tr></table></figure><p>配置解析:</p><ol><li><code>Data ID</code> 填 <code>forum-service</code>: 对应客户端的配置 <code>spring.cloud.nacos.config.prefix</code>，默认值为`${spring.application.name}``，即：服务名</li><li>配置格式选 <code>properties</code>：对应客户端的配置 <code>spring.cloud.nacos.config.file-extension</code>，默认值为 <code>properties</code></li><li><code>Group</code> 的值 <code>DEFAULT_GROUP</code>：对应客户端的配置 <code>spring.cloud.nacos.config.group</code>，默认值为 <code>DEFAULT_GROUP</code></li></ol><h2 id="1-配置的加载规则"><a href="#1-配置的加载规则" class="headerlink" title="1. 配置的加载规则"></a>1. 配置的加载规则</h2><p>在采用默认值的应用要加载的配置规则就是：<code>Data ID=$&#123;spring.application.name&#125;.properties，Group=DEFAULT_GROUP</code></p><p>如果我们想通过自定义配置，实现加载 Data ID=example.yaml，Group=DEV 的配置内容，则按照如下配置即可:</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.prefix</span>=<span class="string">example</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.file-extension</span>=<span class="string">yaml</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.group</span>=<span class="string">DEV</span></span><br></pre></td></tr></table></figure><h2 id="2-多环境管理"><a href="#2-多环境管理" class="headerlink" title="2. 多环境管理"></a>2. 多环境管理</h2><ol><li>使用<code>Data ID</code>与<code>profiles</code>实现</li></ol><p>默认情况下<code>Data ID</code>的名称格式是这样的：<code>$&#123;spring.application.name&#125;.properties</code>，其实还包含了环境逻辑，我们在启动应用时，可以通过<code>spring.profiles.active</code>来指定具体的环境名称，此时客户端就会把要获取配置的<code>Data ID</code>设置为：<code>$&#123;spring.application.name&#125;-$&#123;spring.profiles.active&#125;.properties</code></p><ol start="2"><li>使用<code>Group</code>实现</li></ol><p><code>Group</code>在 Nacos 中是用来对<code>Data ID</code>做集合管理的重要概念。所以，如果我们把一个环境的配置视为一个集合，那么也就可以实现不同环境的配置管理。</p><ol start="3"><li>使用<code>Namespace</code>实现</li></ol><p><code>Namespace</code>的常用场景之一是不同环境的配置的区分隔离，例如：开发测试环境和生产环境的资源（如配置、服务）隔离等。</p><p>可通过以下方式指定项目的<code>Namespace</code></p><p><img src="https://files.mdnice.com/user/10819/c829563b-25dc-4332-b15e-5c741eb5a8b9.png"></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.namespace</span>=<span class="string">c3583494-5c1e-42be-b946-fb3b726dfebe</span></span><br></pre></td></tr></table></figure><p>总结:</p><p>对于指定环境的配置（<code>spring.profiles.active=dev</code>、<code>spring.cloud.nacos.config.group=DEV</code>、<code>spring.cloud.nacos.config.namespace=c3583494-5c1e-42be-b946-fb3b726dfebe</code>），都不要配置在应用的 bootstrap.properties中。而是在发布脚本的启动命令中，用<code>-Dspring.profiles.active=dev</code> 的方式来动态指定，会更加灵活！</p><h2 id="3-Nacos-配置的多文件加载与共享配置"><a href="#3-Nacos-配置的多文件加载与共享配置" class="headerlink" title="3. Nacos 配置的多文件加载与共享配置"></a>3. Nacos 配置的多文件加载与共享配置</h2><ol><li>加载多个配置</li></ol><p><img src="https://files.mdnice.com/user/10819/43bbd25a-6137-4800-8b34-3c312e6753ce.png"></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.cloud.nacos.config.shared-configs[0].data-id</span>=<span class="string">forum-service</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.shared-configs[0].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.shared-configs[0].refresh</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.shared-configs[1].data-id</span>=<span class="string">forum-mybatis-plus</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.shared-configs[1].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.shared-configs[1].refresh</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p><code>spring.cloud.nacos.config.shared-configs</code>配置是一个数组 List 类型。每个配置中包含三个参数：<code>data-id</code>、<code>group</code>，<code>refresh</code>。<code>refresh</code>参数控制这个配置文件中的内容时候支持自动刷新，默认情况下，只有默认加载的配置才会自动刷新，对于这些扩展的配置加载内容需要配置该设置时候才会实现自动刷新。</p><ol start="2"><li>配置加载的优先级</li></ol><ul><li>A: 通过 <code>spring.cloud.nacos.config.shared-dataids</code> 定义的共享配置</li><li>B: 通过 <code>spring.cloud.nacos.config.ext-config[n]</code>定义的加载配置</li><li>C: 通过内部规则（<code>spring.cloud.nacos.config.prefix</code>、<code>spring.cloud.nacos.config.file-extension</code>、<code>spring.cloud.nacos.config.group</code> 这几个参数）拼接出来的配置</li></ul><p>优先级关系是：A &lt; B &lt; C</p><h1 id="0x4-参考"><a href="#0x4-参考" class="headerlink" title="0x4. 参考"></a>0x4. 参考</h1><ol><li><a href="https://nacos.io/zh-cn/docs/what-is-nacos.html">Nacos</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="微服务" scheme="https://jonssonyan.com/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="java" scheme="https://jonssonyan.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Docker搭建ShadowsocksR服务进行手机卡免流详细教程</title>
    <link href="https://jonssonyan.com/2022/06/07/Docker%E6%90%AD%E5%BB%BAShadowsocksR%E5%85%8D%E6%B5%81%E6%95%99%E7%A8%8B/"/>
    <id>https://jonssonyan.com/2022/06/07/Docker%E6%90%AD%E5%BB%BAShadowsocksR%E5%85%8D%E6%B5%81%E6%95%99%E7%A8%8B/</id>
    <published>2022-06-07T15:48:25.000Z</published>
    <updated>2023-02-26T15:15:16.142Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>基于Docker快速搭建ShadowsocksR服务<span id="more"></span><h1 id="0x0-前言"><a href="#0x0-前言" class="headerlink" title="0x0. 前言"></a>0x0. 前言</h1><p>通常手机卡免流可以借助的常用工具是OpenVPN、Tiny、ShadowsocksR（以下简称SSR）。很久之前用过OpenVPN，但是搭建和配置比较麻烦，例如需要写”线路“文件。本文主要是使用SSR这个开源工具，基于Docker快速搭建。</p><blockquote><p>SSR开源地址：<a href="https://github.com/shadowsocksrr/shadowsocksr">https://github.com/shadowsocksrr/shadowsocksr</a></p></blockquote><h1 id="0x1-安装教程"><a href="#0x1-安装教程" class="headerlink" title="0x1. 安装教程"></a>0x1. 安装教程</h1><h2 id="1-安装Docker并pull镜像"><a href="#1-安装Docker并pull镜像" class="headerlink" title="1). 安装Docker并pull镜像"></a>1). 安装Docker并pull镜像</h2><p>Docker安装教程可以参考官网的文档或者之前的文章。</p><ol><li><a href="https://docs.docker.com/engine/install/">Docker官方安装文档</a></li><li><a href="https://jonssonyan.com/2022/01/06/%E7%8E%A9%E8%BD%ACLinux%E4%B9%8BDocker/">玩转Linux之Docker</a></li></ol><p>以下是SSR的DockerHub地址，类似镜像很多，我找了一个可以使用的，按道理优先选择使用数量最多的镜像。</p><blockquote><p><a href="https://hub.docker.com/r/teddysun/shadowsocks-r/">https://hub.docker.com/r/teddysun/shadowsocks-r/</a></p></blockquote><h2 id="2-新建配置文件"><a href="#2-新建配置文件" class="headerlink" title="2). 新建配置文件"></a>2). 新建配置文件</h2><p>本文SSR配置文件路径为<code>/jsdata/ssr/config.json</code>，文件内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;server_ipv6&quot;</span><span class="punctuation">:</span> <span class="string">&quot;::&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;server_port&quot;</span><span class="punctuation">:</span> <span class="number">80</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;local_address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;local_port&quot;</span><span class="punctuation">:</span> <span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123456&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timeout&quot;</span><span class="punctuation">:</span> <span class="number">120</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chacha20&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auth_chain_a&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;protocol_param&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;obfs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http_simple&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;obfs_param&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;redirect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dns_ipv6&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fast_open&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;workers&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>server_port</code>：SSR端口，建议80</li><li><code>password</code>：SSR连接密码</li><li><code>method</code>：加密方式（不重要），常见的加密方式自行谷歌</li><li><code>protocol</code>：协议（不重要），常见的协议自行谷歌</li><li><code>obfs</code>：混淆方式（重要），<strong>必须是http_simple</strong></li></ul><h2 id="3-运行镜像"><a href="#3-运行镜像" class="headerlink" title="3). 运行镜像"></a>3). 运行镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker pull teddysun/shadowsocks-r</span><br><span class="line">docker run -d --name js-ssr --restart=always \</span><br><span class="line">    -p 80:80 -p 80:80/udp \</span><br><span class="line">    -v /jsdata/ssr/config.json:/etc/shadowsocks-r/config.json \</span><br><span class="line">    teddysun/shadowsocks-r</span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>-d</code>：后台运行容器，并返回容器ID</li><li><code>--restart=always</code>：随着Docker启动而启动</li><li><code>--name</code>：为容器指定一个名称</li><li><code>-p</code>：映射端口，格式为：宿主机端口:容器端口</li><li><code>-v</code>：映射卷</li></ul><h1 id="0x2-客户端推荐"><a href="#0x2-客户端推荐" class="headerlink" title="0x2. 客户端推荐"></a>0x2. 客户端推荐</h1><p>Android：<a href="https://github.com/shadowsocksrr/shadowsocksr-android/releases">shadowsocksr-android</a></p><p>IOS：<a href="https://apps.apple.com/us/app/shadowrocket/id932747118">Shadowrocket</a></p><p>Windows：<a href="https://github.com/shadowsocksrr/shadowsocksr-csharp/releases">shadowsocksr-csharp</a></p><h1 id="0x3-混淆参数"><a href="#0x3-混淆参数" class="headerlink" title="0x3. 混淆参数"></a>0x3. 混淆参数</h1><p>免流的核心是混淆参数，对应参数可以通过抓包获得，原理是利用运营商流量识别系统漏洞，欺骗流量计费系统从而达到免流使用流量的目的，例如我们设置混淆参数为<code>ltevod.tv189.cn</code>（这是最经典的电信爱看免流混淆参数），当我们连接服务器使用流量时，计费系统会误以为是使用爱看的流量，自然也就是从爱看定向流量包里面扣除，而不是从我们通用流量中扣除。目前通过定向流量免流的方式还是可以使用的，配合互联网卡还是很香。16年左右很好免，但是随着运营商系统识别能力变强，很多混淆参数都被和谐，只有定向流量的方式最稳定。</p><p>以下列举了常见的免流混淆参数（主要以定向流量为主），不保证所有都可以用，如果没有可以自行谷歌或者抓包。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">全国阿里鱼卡阿里宝卡虾米音乐B</span><br><span class="line">m128<span class="selector-class">.xiami</span><span class="selector-class">.net</span></span><br><span class="line">全国阿里鱼卡优酷视频A</span><br><span class="line">vali<span class="selector-class">.cp31</span><span class="selector-class">.ott</span><span class="selector-class">.cibntv</span><span class="selector-class">.net</span></span><br><span class="line">全国电信天翼视讯A</span><br><span class="line"><span class="selector-tag">h5</span><span class="selector-class">.nty</span><span class="selector-class">.tv189</span><span class="selector-class">.com</span></span><br><span class="line">全国电信天翼视讯B</span><br><span class="line">vod3<span class="selector-class">.nty</span><span class="selector-class">.tv189</span><span class="selector-class">.cn</span></span><br><span class="line">全国网易白金卡爱奇艺</span><br><span class="line">msga<span class="selector-class">.cupid</span><span class="selector-class">.iqiyi</span><span class="selector-class">.com</span></span><br><span class="line">优酷A</span><br><span class="line">sdk<span class="selector-class">.m</span><span class="selector-class">.youku</span><span class="selector-class">.com</span></span><br><span class="line">全国阿里鱼卡钉钉</span><br><span class="line">g<span class="selector-class">.alicdn</span><span class="selector-class">.com</span></span><br><span class="line">全国阿里鱼卡卡支付宝</span><br><span class="line">ds<span class="selector-class">.alipay</span><span class="selector-class">.com</span></span><br><span class="line">全国阿里鱼卡优酷视频B</span><br><span class="line">actives<span class="selector-class">.youku</span><span class="selector-class">.com</span></span><br><span class="line">全国网易白金卡<span class="number">163</span>邮箱</span><br><span class="line">g6a49<span class="selector-class">.mail</span>.<span class="number">163</span><span class="selector-class">.com</span></span><br><span class="line">爱看<span class="number">4</span>G</span><br><span class="line">ltevod<span class="selector-class">.tv189</span><span class="selector-class">.cn</span></span><br><span class="line">爱听<span class="number">4</span>G</span><br><span class="line">clientst<span class="selector-class">.musicway</span><span class="selector-class">.cn</span></span><br><span class="line">爱玩<span class="number">4</span>G</span><br><span class="line">open.<span class="number">4</span>g<span class="selector-class">.play</span><span class="selector-class">.cn</span></span><br><span class="line">微博V卡A</span><br><span class="line">new<span class="selector-class">.vip</span><span class="selector-class">.weibo</span><span class="selector-class">.cn</span></span><br><span class="line">微博V卡B</span><br><span class="line">m<span class="selector-class">.weibo</span><span class="selector-class">.cn</span></span><br><span class="line">联通大王卡QQ音乐A</span><br><span class="line"><span class="selector-tag">dl</span><span class="selector-class">.stream</span><span class="selector-class">.qqmusic</span><span class="selector-class">.com</span></span><br><span class="line">全国百度圣卡爱奇艺</span><br><span class="line">baiducdncnc<span class="selector-class">.inter</span><span class="selector-class">.iqiyi</span><span class="selector-class">.com</span></span><br><span class="line">全国阿里宝卡钉钉</span><br><span class="line">tms<span class="selector-class">.dingtalk</span><span class="selector-class">.com</span></span><br><span class="line">全国联通沃音乐</span><br><span class="line">music<span class="selector-class">.hxll</span><span class="selector-class">.wostore</span><span class="selector-class">.cn</span></span><br><span class="line">联通大王卡</span><br><span class="line">szminorshort<span class="selector-class">.weixin</span><span class="selector-class">.qq</span><span class="selector-class">.com</span></span><br><span class="line">szshort<span class="selector-class">.weixin</span><span class="selector-class">.qq</span><span class="selector-class">.com</span></span><br><span class="line">dns<span class="selector-class">.weixin</span><span class="selector-class">.qq</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">dl</span><span class="selector-class">.stream</span><span class="selector-class">.qqmusic</span><span class="selector-class">.com</span></span><br><span class="line">m<span class="selector-class">.y</span><span class="selector-class">.qq</span><span class="selector-class">.com</span></span><br><span class="line">commdate<span class="selector-class">.vqq</span><span class="selector-class">.com</span></span><br><span class="line">联通哔哩哔哩卡</span><br><span class="line">app<span class="selector-class">.bilibili</span><span class="selector-class">.com</span></span><br><span class="line">m128<span class="selector-class">.xiami</span><span class="selector-class">.net</span></span><br><span class="line">g<span class="selector-class">.alicdn</span><span class="selector-class">.com</span></span><br><span class="line">ds<span class="selector-class">.alipay</span><span class="selector-class">.com</span></span><br><span class="line"><span class="selector-tag">h5</span><span class="selector-class">.m</span><span class="selector-class">.taobao</span><span class="selector-class">.com</span></span><br><span class="line">static<span class="selector-class">.shuqiread</span><span class="selector-class">.com</span></span><br><span class="line">wxapi<span class="selector-class">.taobao</span><span class="selector-class">.com</span></span><br><span class="line">pic<span class="selector-class">.xiami</span><span class="selector-class">.net</span></span><br><span class="line">优酷视频</span><br><span class="line">vali<span class="selector-class">.cp31</span><span class="selector-class">.ott</span><span class="selector-class">.cibntv</span><span class="selector-class">.net</span></span><br><span class="line">actives<span class="selector-class">.youku</span><span class="selector-class">.com</span></span><br><span class="line">sdk<span class="selector-class">.m</span><span class="selector-class">.youku</span><span class="selector-class">.com</span></span><br><span class="line">www<span class="selector-class">.youku</span><span class="selector-class">.com</span></span><br><span class="line">ding<span class="selector-class">.youku</span><span class="selector-class">.com</span></span><br><span class="line">电信百度圣卡</span><br><span class="line">msg.<span class="number">71</span><span class="selector-class">.am</span></span><br><span class="line">baiducdncnc<span class="selector-class">.inter</span><span class="selector-class">.iqiyi</span><span class="selector-class">.com</span></span><br><span class="line">cmonitor<span class="selector-class">.iqiyi</span><span class="selector-class">.com</span></span><br><span class="line">client<span class="selector-class">.map</span><span class="selector-class">.baidu</span><span class="selector-class">.com</span></span><br><span class="line">news<span class="selector-class">.baidu</span><span class="selector-class">.com</span></span><br><span class="line">天翼视讯</span><br><span class="line"><span class="selector-tag">h5</span><span class="selector-class">.nty</span><span class="selector-class">.tv189</span><span class="selector-class">.com</span></span><br><span class="line">vod3<span class="selector-class">.nty</span><span class="selector-class">.tv189</span><span class="selector-class">.cn</span></span><br><span class="line">www<span class="selector-class">.baidu</span>.com/<span class="selector-tag">h5</span><span class="selector-class">.nty</span><span class="selector-class">.tv189</span>.com</span><br></pre></td></tr></table></figure><h1 id="0x4-总结"><a href="#0x4-总结" class="headerlink" title="0x4. 总结"></a>0x4. 总结</h1><p>免流的方式有很多种，有的是识别host（多数情况也是这种），有的是识别user-agent。总的来说，定向流量免流还可以玩玩，其他的容易翻车。不比当年，免流已经成为历史，不过偶尔玩一下还是可以的，比如我现在用的是电信的爱听和爱玩，每月加起来12G，够日常使用了。</p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
基于Docker快速搭建ShadowsocksR服务</summary>
    
    
    
    <category term="DevOps" scheme="https://jonssonyan.com/categories/DevOps/"/>
    
    
  </entry>
  
  <entry>
    <title>玩转Nginx之http强转https</title>
    <link href="https://jonssonyan.com/2022/04/02/%E7%8E%A9%E8%BD%ACNginx%E4%B9%8Bhttp%E5%BC%BA%E8%BD%AChttps/"/>
    <id>https://jonssonyan.com/2022/04/02/%E7%8E%A9%E8%BD%ACNginx%E4%B9%8Bhttp%E5%BC%BA%E8%BD%AChttps/</id>
    <published>2022-04-02T11:51:46.000Z</published>
    <updated>2023-02-26T15:15:16.149Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><h1 id="0x0-准备"><a href="#0x0-准备" class="headerlink" title="0x0. 准备"></a>0x0. 准备</h1><ol><li>Nginx</li><li>域名证书</li></ol><h1 id="0x1-安装-Nginx"><a href="#0x1-安装-Nginx" class="headerlink" title="0x1. 安装 Nginx"></a>0x1. 安装 Nginx</h1><p>本文使用的是 Nginx 1.18.0，安装过程略。</p><ol><li>使用官方安装包安装</li></ol><blockquote><p>Nginx 官网：<a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></p></blockquote><ol start="2"><li>使用 Docker 部署</li></ol><blockquote><p>Docker Hub - Nginx：<a href="https://hub.docker.com/_/nginx">https://hub.docker.com/_/nginx</a></p></blockquote><h1 id="0x2-http-强转-https"><a href="#0x2-http-强转-https" class="headerlink" title="0x2. http 强转 https"></a>0x2. http 强转 https</h1><h2 id="1-使用-return-rewrite"><a href="#1-使用-return-rewrite" class="headerlink" title="1). 使用 return/rewrite"></a>1). 使用 return/rewrite</h2><p>以下是 Nginx 配置</p><ol><li>return 写法</li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">server</span> &#123;</span><br><span class="line">    <span class="keyword">listen</span>       <span class="number">80</span>;</span><br><span class="line">    server_name  your_domain;</span><br><span class="line">    <span class="keyword">return</span>  ^(.*)$  your_https_url;</span><br><span class="line"></span><br><span class="line">    # 自定义域名设置</span><br><span class="line">    #<span class="keyword">if</span> ($host = &quot;eq_domain&quot;) &#123;</span><br><span class="line">    #  <span class="keyword">return</span>  ^(.*)$  your_https_url;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="keyword">log</span>/nginx/host.<span class="keyword">access</span>.<span class="keyword">log</span>  main;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> / &#123;</span><br><span class="line">        root   /usr/<span class="keyword">share</span>/nginx/html;</span><br><span class="line">        <span class="keyword">index</span>  <span class="keyword">index</span>.html <span class="keyword">index</span>.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li>your_domain：你的域名</li><li>eq_domain：匹配上的域名</li><li>your_https_url：你想要强转的 https URL</li></ul><ol start="2"><li>rewrite 写法</li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">server</span> &#123;</span><br><span class="line">    <span class="keyword">listen</span>       <span class="number">80</span>;</span><br><span class="line">    server_name  your_domain;</span><br><span class="line">    <span class="keyword">return</span>  <span class="number">301</span>  your_https_url;</span><br><span class="line"></span><br><span class="line">    # 自定义域名设置</span><br><span class="line">    #<span class="keyword">if</span> ($host = &quot;eq_domain&quot;) &#123;</span><br><span class="line">    #  <span class="keyword">return</span>  <span class="number">301</span>  your_https_url;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="keyword">log</span>/nginx/host.<span class="keyword">access</span>.<span class="keyword">log</span>  main;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> / &#123;</span><br><span class="line">        root   /usr/<span class="keyword">share</span>/nginx/html;</span><br><span class="line">        <span class="keyword">index</span>  <span class="keyword">index</span>.html <span class="keyword">index</span>.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li>your_domain：你的域名</li><li>eq_domain：匹配上的域名</li><li>your_https_url：你想要强转的 https URL</li></ul><h2 id="2-使用-497-状态码"><a href="#2-使用-497-状态码" class="headerlink" title="2). 使用 497 状态码"></a>2). 使用 497 状态码</h2><p>以下是 Nginx 配置</p><ol><li>配置 80</li></ol><p>本机 80 端口强转至其他 https URL</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">server</span> &#123;</span><br><span class="line">    <span class="keyword">listen</span>       <span class="number">80</span>;</span><br><span class="line">    server_name  your_domain;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="keyword">log</span>/nginx/host.<span class="keyword">access</span>.<span class="keyword">log</span>  main;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> / &#123;</span><br><span class="line">        root   /usr/<span class="keyword">share</span>/nginx/html;</span><br><span class="line">        <span class="keyword">index</span>  <span class="keyword">index</span>.html <span class="keyword">index</span>.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page  <span class="number">497</span>              your_https_url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li>your_domain：你的域名</li><li>your_https_url：你想要强转的 https URL</li></ul><ol start="2"><li>配置 80 和 443</li></ol><p>本机 80 端口的 http 强转至 本机 443 端口的 https</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span>  your_domain;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#强制ssl</span></span><br><span class="line">    <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_certificate</span>      your_crt_path.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>  your_key_path.key;</span><br><span class="line">    <span class="comment">#缓存有效期</span></span><br><span class="line">    <span class="attribute">ssl_session_timeout</span>  <span class="number">5m</span>;</span><br><span class="line">    <span class="comment">#安全链接可选的加密协议</span></span><br><span class="line">    <span class="attribute">ssl_protocols</span>  TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="comment">#加密算法</span></span><br><span class="line">    <span class="attribute">ssl_ciphers</span>  ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    <span class="comment">#使用服务器端的首选算法</span></span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span>  <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/host.access.log  main;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">        <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">error_page</span>  <span class="number">497</span>              https://<span class="variable">$host</span><span class="variable">$uri</span>?<span class="variable">$args</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释：</p><ul><li>your_domain：你的域名</li><li>your_crt_path：证书 crt 文件位置</li><li>your_key_path：证书 key 文件位置</li></ul><h2 id="3-利用-meta-的刷新作用"><a href="#3-利用-meta-的刷新作用" class="headerlink" title="3). 利用 meta 的刷新作用"></a>3). 利用 meta 的刷新作用</h2><p>以下是 Nginx 配置</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">server</span> &#123;</span><br><span class="line">    <span class="keyword">listen</span>       <span class="number">80</span>;</span><br><span class="line">    server_name  your_domain;</span><br><span class="line"></span><br><span class="line">    access_log  /var/<span class="keyword">log</span>/nginx/host.<span class="keyword">access</span>.<span class="keyword">log</span>  main;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">location</span> / &#123;</span><br><span class="line">        root   /usr/<span class="keyword">share</span>/nginx/html;</span><br><span class="line">        <span class="keyword">index</span>  <span class="keyword">index</span>.html <span class="keyword">index</span>.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>/usr/share/nginx/html</code>新建<code>index.html</code>/<code>index.htm</code>，文件内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0;url=your_https_url&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解释：</p><ul><li><code>your_domain</code>：你的域名</li><li><code>your_https_url</code>：你想要强转的 https URL</li></ul>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="DevOps" scheme="https://jonssonyan.com/categories/DevOps/"/>
    
    
    <category term="nginx" scheme="https://jonssonyan.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Windows10配置Rust开发环境</title>
    <link href="https://jonssonyan.com/2022/04/02/Windows10%E9%85%8D%E7%BD%AERust%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://jonssonyan.com/2022/04/02/Windows10%E9%85%8D%E7%BD%AERust%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2022-04-02T11:49:33.000Z</published>
    <updated>2023-02-26T15:15:16.146Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><h1 id="0x0-相关概念"><a href="#0x0-相关概念" class="headerlink" title="0x0. 相关概念"></a>0x0. 相关概念</h1><h2 id="1-channel"><a href="#1-channel" class="headerlink" title="1). channel"></a>1). channel</h2><p>Rust 发布在三个不同的 channel 上：stable、beta、nightly，简单说就是三种不同的版本。</p><ul><li>stable：Rust 的稳定版本，每 6 周发布一次。</li><li>beta：Rust 的公开测试版本，将是下一个 stable 版本。</li><li>nightly：每天更新，包含以一些实验性的新特性。</li></ul><h2 id="2-toolchain"><a href="#2-toolchain" class="headerlink" title="2). toolchain"></a>2). toolchain</h2><p>一套 Rust 组件，包括编译器及其相关工具，并且包含 channel，版本及支持的平台信息。</p><h2 id="3-target"><a href="#3-target" class="headerlink" title="3). target"></a>3). target</h2><p>指编译的目标平台，即：编译后的程序在哪种操作系统上运行。</p><h2 id="4-component"><a href="#4-component" class="headerlink" title="4). component"></a>4). component</h2><p>toolchain 是由 component 组成的。</p><p>查看所有可用和已经安装的组件命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup component list</span><br></pre></td></tr></table></figure><p>rustup 默认安装的组件：</p><ul><li>rustc：Rust 编译器。</li><li>rust-std：Rust 标准库。</li><li>cargo：包管理和构建工具。</li><li>rust-docs：Rust 文档。</li><li>rustfmt：用来格式化 Rust 源代码。</li><li>clippy：Rust 的代码检查工具。</li></ul><h2 id="5-profile"><a href="#5-profile" class="headerlink" title="5). profile"></a>5). profile</h2><p>为了方便对 component 进行管理，使用 profile 定义一组 component。</p><p>不同的 profile 包含不同的组件，安装 rustup 时有三种 profile 可选：</p><table><thead><tr><th>Profile</th><th>components</th></tr></thead><tbody><tr><td>minimal</td><td>rustc, rust-std, cargo</td></tr><tr><td>default</td><td>rustc, rust-std, cargo, rust-docs, rustfmt, clippy</td></tr><tr><td>complete</td><td>all</td></tr></tbody></table><p>修改 profile 命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rustup <span class="built_in">set</span> profile minimal</span><br></pre></td></tr></table></figure><h1 id="0x1-下载-Rust"><a href="#0x1-下载-Rust" class="headerlink" title="0x1. 下载 Rust"></a>0x1. 下载 Rust</h1><blockquote><p>Rust 官网：<a href="https://www.rust-lang.org/tools/install">https://www.rust-lang.org/tools/install</a></p></blockquote><h1 id="0x2-安装-Rust"><a href="#0x2-安装-Rust" class="headerlink" title="0x2. 安装 Rust"></a>0x2. 安装 Rust</h1><p><img src="https://files.mdnice.com/user/10819/f08cc248-8676-49ca-8685-e09aa19713a4.png"></p><p>默认情况，Rust 依赖 <code>C++ build tools</code>，没有安装也关系。</p><p><img src="https://files.mdnice.com/user/10819/3170ea3b-07d8-4757-85eb-65979bbed257.png"></p><p>这里我么选择 2，进行自定义安装。</p><p>输入：<code>x86_64-pc-windows-gnu</code>，其他的默认。</p><p>最后会确认安装信息，回车进行安装，会从网上下载文件，所以安装过程需要保证网络正常。</p><p>以下是一些常用的命令：</p><ol><li>rustup 相关</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前安装的工具链信息</span></span><br><span class="line">rustup show</span><br><span class="line"><span class="comment"># 检查安装更新</span></span><br><span class="line">rustup update</span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">rustup self uninstall</span><br><span class="line"><span class="comment"># 设置当前默认工具链</span></span><br><span class="line">rustup default stable-x86_64-pc-windows-gnu</span><br><span class="line"><span class="comment"># 查看帮助</span></span><br><span class="line">rustup -h</span><br><span class="line"><span class="comment"># --------------------------&gt;配置工具链</span></span><br><span class="line"><span class="comment"># 查看工具链</span></span><br><span class="line">rustup toolchain list</span><br><span class="line"><span class="comment"># 安装工具链</span></span><br><span class="line">rustup toolchain install stable-x86_64-pc-windows-gnu</span><br><span class="line"><span class="comment"># 卸载工具链</span></span><br><span class="line">rustup toolchain uninstall stable-x86_64-pc-windows-gnu</span><br><span class="line"><span class="comment"># 设置自定义工具链</span></span><br><span class="line">rustup toolchain <span class="built_in">link</span> &lt;toolchain-name&gt; <span class="string">&quot;&lt;toolchain-path&gt;&quot;</span></span><br><span class="line"><span class="comment"># --------------------------&gt;配置一个目录以及其子目录的默认工具链</span></span><br><span class="line"><span class="comment"># 查看已设置的默认工具链</span></span><br><span class="line">rustup override list</span><br><span class="line"><span class="comment"># 设置该目录以及其子目录的默认工具链</span></span><br><span class="line">rustup override <span class="built_in">set</span> &lt;toolchain&gt; --path &lt;path&gt;</span><br><span class="line"><span class="comment"># 取消目录以及其子目录的默认工具链</span></span><br><span class="line">rustup override <span class="built_in">unset</span> --path &lt;path&gt;</span><br><span class="line"><span class="comment"># --------------------------&gt;配置工具链的可用目标</span></span><br><span class="line"><span class="comment"># 查看目标列表</span></span><br><span class="line">rustup target list</span><br><span class="line"><span class="comment"># 安装目标</span></span><br><span class="line">rustup target add &lt;target&gt;</span><br><span class="line"><span class="comment"># 卸载目标</span></span><br><span class="line">rustup target remove &lt;target&gt;</span><br><span class="line"><span class="comment"># 为特定工具链安装目标</span></span><br><span class="line">rustup target add --toolchain &lt;toolchain&gt; &lt;target&gt;</span><br><span class="line"><span class="comment"># --------------------------&gt;配置 rustup 安装的组件</span></span><br><span class="line"><span class="comment"># 查看可用组件</span></span><br><span class="line">rustup component list</span><br><span class="line"><span class="comment"># 安装组件</span></span><br><span class="line">rustup component add &lt;component&gt;</span><br><span class="line"><span class="comment"># 卸载组件</span></span><br><span class="line">rustup component remove &lt;component&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>rustc 相关</li></ol><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看rustc版本</span></span><br><span class="line">rustc <span class="comment">--version</span></span><br></pre></td></tr></table></figure><ol start="3"><li>cargo 相关</li></ol><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看cargo版本</span></span><br><span class="line">cargo --version</span><br><span class="line"><span class="comment"># 新建项目</span></span><br><span class="line">cargo<span class="built_in"> new </span>&lt;project_name&gt;</span><br><span class="line"><span class="comment"># 构建项目</span></span><br><span class="line">cargo build</span><br><span class="line"><span class="comment"># 运行项目</span></span><br><span class="line">cargo run</span><br><span class="line"><span class="comment"># 检查项目</span></span><br><span class="line">cargo<span class="built_in"> check</span></span><br><span class="line"><span class="built_in"></span><span class="comment"># 安装Rust二进制文件</span></span><br><span class="line">cargo install</span><br><span class="line"><span class="comment"># 卸载Rust二进制文件</span></span><br><span class="line">cargo uninstall</span><br><span class="line"><span class="comment"># 查看帮助</span></span><br><span class="line">cargo -h</span><br></pre></td></tr></table></figure><h1 id="0x3-配置工具链安装位置"><a href="#0x3-配置工具链安装位置" class="headerlink" title="0x3. 配置工具链安装位置"></a>0x3. 配置工具链安装位置</h1><p>在系统环境变量中添加如下变量：</p><p><code>CARGO_HOME</code> 指定 <code>cargo</code> 的安装目录</p><p><code>RUSTUP_HOME</code> 指定 <code>rustup</code> 的安装目录</p><p>默认分别安装到用户目录下的<code>.cargo</code> 和<code>.rustup</code> 目录</p><h1 id="0x4-配置国内镜像"><a href="#0x4-配置国内镜像" class="headerlink" title="0x4. 配置国内镜像"></a>0x4. 配置国内镜像</h1><h2 id="1-配置-rustup-国内镜像"><a href="#1-配置-rustup-国内镜像" class="headerlink" title="1). 配置 rustup 国内镜像"></a>1). 配置 rustup 国内镜像</h2><p>在系统环境变量中添加如下变量：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 中国科学技术大学</span></span><br><span class="line">RUSTUP_DIST_SERVER：https:<span class="regexp">//mi</span>rrors.ustc.edu.cn/rust-static</span><br><span class="line">RUSTUP_UPDATE_ROOT：https:<span class="regexp">//mi</span>rrors.ustc.edu.cn<span class="regexp">/rust-static/</span>rustup</span><br></pre></td></tr></table></figure><h2 id="2-配置-cargo-国内镜像"><a href="#2-配置-cargo-国内镜像" class="headerlink" title="2). 配置 cargo 国内镜像"></a>2). 配置 cargo 国内镜像</h2><p>在 cargo 安装目录下新建 config 文件（注意 config 没有任何后缀），文件内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[source.crates-io]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;https://github.com/rust-lang/crates.io-index&quot;</span></span><br><span class="line"><span class="attr">replace-with</span> = <span class="string">&#x27;tuna&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清华大学</span></span><br><span class="line"><span class="section">[source.tuna]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/crates.io-index.git&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中国科学技术大学</span></span><br><span class="line"><span class="section">[source.ustc]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;git://mirrors.ustc.edu.cn/crates.io-index&quot;</span></span><br><span class="line"><span class="comment"># 设置代理</span></span><br><span class="line"><span class="comment"># [http]</span></span><br><span class="line"><span class="comment"># proxy = &quot;127.0.0.1:8889&quot;</span></span><br><span class="line"><span class="comment"># [https]</span></span><br><span class="line"><span class="comment"># proxy = &quot;127.0.0.1:8889&quot;</span></span><br></pre></td></tr></table></figure><h1 id="0x5-Windows-交叉编译-Linux-程序"><a href="#0x5-Windows-交叉编译-Linux-程序" class="headerlink" title="0x5. Windows 交叉编译 Linux 程序"></a>0x5. Windows 交叉编译 Linux 程序</h1><p>目标服务器是 <code>Linux(CentOS 7) 64bit</code>, 所以我们添加的 target 应该是<code>x86_64-unknown-linux-gnu</code>(动态依赖) 或者<code>x86_64-unknown-linux-musl</code>（静态依赖）</p><p>解释：</p><ul><li><p>动态依赖：目标服务器需要包含动态依赖的相关库（用户共享库）</p></li><li><p>静态依赖，目标服务器不需要包含相应的库，但是打包文件会更大些</p><p>1). 添加需要的 target</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rustup target add  x86_64-unknown-linux-musl</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2). 在 cargo 安装目录下新建 config 文件（注意 config 没有任何后缀），添加的文件内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[target.x86_64-unknown-linux-musl]</span></span><br><span class="line"><span class="attr">linker</span> = <span class="string">&quot;rust-lld&quot;</span></span><br></pre></td></tr></table></figure><p>3). 构建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo build --target x86_64-unknown-linux-musl</span><br></pre></td></tr></table></figure><h1 id="0x6-参考"><a href="#0x6-参考" class="headerlink" title="0x6. 参考"></a>0x6. 参考</h1><ol><li>官方指南：<a href="https://kaisery.github.io/trpl-zh-cn/">https://kaisery.github.io/trpl-zh-cn/</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="开发环境" scheme="https://jonssonyan.com/categories/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="rust" scheme="https://jonssonyan.com/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>Xshell无限标签和永久去更新教程</title>
    <link href="https://jonssonyan.com/2022/03/16/Xshell%E6%97%A0%E9%99%90%E6%A0%87%E7%AD%BE%E5%92%8C%E6%B0%B8%E4%B9%85%E5%8E%BB%E6%9B%B4%E6%96%B0%E6%95%99%E7%A8%8B/"/>
    <id>https://jonssonyan.com/2022/03/16/Xshell%E6%97%A0%E9%99%90%E6%A0%87%E7%AD%BE%E5%92%8C%E6%B0%B8%E4%B9%85%E5%8E%BB%E6%9B%B4%E6%96%B0%E6%95%99%E7%A8%8B/</id>
    <published>2022-03-16T14:51:40.000Z</published>
    <updated>2023-02-26T15:15:16.146Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>Xshell 是一款强大的 SSH 客户端，可惜的是没有 Mac 系统的客户端，不过这丝毫不影响他在 SSH 终端领域绝对的王者地位。废话不多说，今天分享的是 Xshell 不限制标签和永久去更新方法。<span id="more"></span><p>下图是 Xshell 软件主界面。</p><p><img src="https://files.mdnice.com/user/10819/bb3a8a2a-9237-4b6c-8dff-18ea27c027b4.png" alt="Xshell"></p><p>写这篇文章的起因是，最近在 Xshell 官网发公告，大意是 2022 年 2 月 6 号之后，免费版的 Xshell7将不再限制标签的数量。此时白嫖用户拍手叫好，小编也下载了一个，体验一下被支配的快乐。结果也差强人意，但是哪有那么好的事情，总要用户牺牲点什么，这不官方设置了在每次关闭 Xshell 的时候都会弹出一个免费许可的提示框，但是会在 10s之后自动关闭，但是对于我这样的强迫症来说这无疑是眼中钉，看着难受，于是经过一系列调研，小编我准备回退到 Xshell5的版本然后设置永久不更新，哈哈哈，这样一个骚操作，岂不是美哉！这你就要问了，最新版不香么？其实他们区别并不大，总体体验上来说 5 和 7 版本几乎没有什么变化。下图是官方公告。</p><p><img src="https://files.mdnice.com/user/10819/c3279411-cad7-4cdd-becd-4ad52b34cc41.png" alt="官方公告"></p><p>众所周知，Xshell 有免费版和商业版，大家应该和我一样都是用的免费版，毕竟白嫖真的舒服，但是免费版有些问题，最臭名昭著的就是强制更新，还有就是在 Xshell6 之后开始限制免费版同时开标签的数量不得超过 4 个，Xshell7开始不限制标签数量了，结果又会有烦人的弹窗。唯独 Xshell5 限制比较少。以下是下载正版的 Xshell5 并去更新的方法。</p><h1 id="首先下载-Xshell5-最后一个版本"><a href="#首先下载-Xshell5-最后一个版本" class="headerlink" title="首先下载 Xshell5 最后一个版本"></a>首先下载 Xshell5 最后一个版本</h1><h2 id="Xshell5-文件如下"><a href="#Xshell5-文件如下" class="headerlink" title="Xshell5 文件如下"></a>Xshell5 文件如下</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">链接：https:<span class="comment">//wwi.lanzout.com/i8KDw01iqzsj</span></span><br><span class="line">密码：<span class="number">9</span>na1</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">Size:</span> <span class="number">33012688</span> bytes</span><br><span class="line">File Version: <span class="number">5.0</span><span class="number">.1339</span></span><br><span class="line"><span class="symbol">MD5:</span> AB1A4AFB4894B71A3DC4DE84A84E7126</span><br><span class="line"><span class="symbol">SHA1:</span> D2DA24229554139AEF8D21F737D6F78F7BEF7A7F</span><br><span class="line"><span class="symbol">CRC32:</span> <span class="number">305847</span>D5</span><br></pre></td></tr></table></figure><h2 id="Xftp5-文件如下"><a href="#Xftp5-文件如下" class="headerlink" title="Xftp5 文件如下"></a>Xftp5 文件如下</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">链接：https:<span class="comment">//wwi.lanzout.com/ignmd01iu3jc</span></span><br><span class="line">密码：i8u4</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">Size:</span> <span class="number">32115152</span> bytes</span><br><span class="line">File Version: <span class="number">5.0</span><span class="number">.1235</span></span><br><span class="line"><span class="symbol">MD5:</span> <span class="number">5119</span>C3AEAC80299EF57858756B3A9EC4</span><br><span class="line"><span class="symbol">SHA1:</span> <span class="number">3</span>CC4350D4ED36A1BE557E0D114B755414D6F747B</span><br><span class="line"><span class="symbol">CRC32:</span> CC18CE46</span><br></pre></td></tr></table></figure><p>大家下载好文件之后一定要校验一下文件是否被更改过。</p><h1 id="安装-Xshell5"><a href="#安装-Xshell5" class="headerlink" title="安装 Xshell5"></a>安装 Xshell5</h1><p>正常安装软件就可以了</p><h1 id="修改安装目录下的nslicense-dll"><a href="#修改安装目录下的nslicense-dll" class="headerlink" title="修改安装目录下的nslicense.dll"></a>修改安装目录下的<code>nslicense.dll</code></h1><p>小编用的是 VSCode+Hex Editor 插件修改的文件并保存，大家可以使用自己的 16 进制编辑器去修改文件。如果没有权限修改，就使用管理员权限或者复制一个文件，修改好之后复制到该目录下面，将<code>nslicense.dll</code>文件替换即可。</p><p>将文件中的：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">7F</span> <span class="number">0</span>C <span class="number">81</span> F9 <span class="number">80</span> <span class="number">33</span> E1 <span class="number">01</span> <span class="number">0</span>F <span class="number">86</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>替换为：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">7F</span> <span class="number">0</span>C <span class="number">81</span> F9 <span class="number">80</span> <span class="number">33</span> E1 <span class="number">01</span> <span class="number">0</span>F <span class="number">83</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/10819/b21ff962-596a-429c-a2b1-847a729ee6a4.png" alt="nslicense.dll"></p><p><img src="https://files.mdnice.com/user/10819/4558faa1-b88f-4a0e-9253-a9971be1f83c.png" alt="Hex Editor"></p><p><img src="https://files.mdnice.com/user/10819/206baca7-4f36-468a-8723-b7a7cb90227f.png" alt="修改文件并保存"></p><h1 id="起飞咯"><a href="#起飞咯" class="headerlink" title="起飞咯"></a>起飞咯</h1><p>舒服了。Xshell YYDS!!</p><p><img src="https://files.mdnice.com/user/10819/be2ca15b-8d11-4176-a06e-51885d3bc0a1.png" alt="没有了标签数量的限制后的Xshell5"></p><p>最后把自动更新去掉就行了。</p><p><img src="https://files.mdnice.com/user/10819/be904d07-ea4b-4eca-bf81-a90ed26e57c8.png" alt="关闭自动更新"></p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
Xshell 是一款强大的 SSH 客户端，可惜的是没有 Mac 系统的客户端，不过这丝毫不影响他在 SSH 终端领域绝对的王者地位。废话不多说，今天分享的是 Xshell 不限制标签和永久去更新方法。</summary>
    
    
    
    <category term="实用工具" scheme="https://jonssonyan.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="tool" scheme="https://jonssonyan.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>工欲善其事，必先利其器。JetBrains IDE全家桶免费使用方法</title>
    <link href="https://jonssonyan.com/2022/02/26/%E5%B7%A5%E6%AC%B2%E5%96%84%E5%85%B6%E4%BA%8B%EF%BC%8C%E5%BF%85%E5%85%88%E5%88%A9%E5%85%B6%E5%99%A8%E3%80%82JetBrains-IDE%E5%85%A8%E5%AE%B6%E6%A1%B6%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://jonssonyan.com/2022/02/26/%E5%B7%A5%E6%AC%B2%E5%96%84%E5%85%B6%E4%BA%8B%EF%BC%8C%E5%BF%85%E5%85%88%E5%88%A9%E5%85%B6%E5%99%A8%E3%80%82JetBrains-IDE%E5%85%A8%E5%AE%B6%E6%A1%B6%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2022-02-26T03:41:52.000Z</published>
    <updated>2023-02-26T15:15:16.148Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><p>JetBrains 家的 IDE 很智能，但是大部分都是收费的。不花钱使用正版的方式有两个</p><ol><li><p>使用教育邮箱申请，申请地址: <a href="https://www.jetbrains.com/zh-cn/community/education/">https://www.jetbrains.com/zh-cn/community/education/</a></p></li><li><p>使用持续维护 3 个月以上的开源项目申请（对项目的要求不高，不要是 Hello World）申请地址: <a href="https://www.jetbrains.com/zh-cn/community/opensource/#support">https://www.jetbrains.com/zh-cn/community/opensource/#support</a></p></li></ol><p>最后说的就是它的和谐方法</p><h1 id="无限重设脚本"><a href="#无限重设脚本" class="headerlink" title="无限重设脚本"></a>无限重设脚本</h1><p>网上大部分教程都是出自 zhile 的博客 <a href="https://zhile.io/">https://zhile.io</a> 安装方法是直接拖到 IDE 中就会自动安装，如果不可以，就在插件系统里面去手动安装。插件中有个选项 <code>Auto reset before per restart</code>，将它勾选，意思就是在每次关闭 IDE 的时候自动重设试用期，懒人专用。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">无限重设脚本</span><br><span class="line">https:<span class="regexp">//</span>wwi.lanzout.com/iEpdczsepsf</span><br><span class="line">密码:<span class="number">5</span>khy</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/10819/3057196e-c20e-4b8f-832c-c3318920f7f0.png" alt="无限重设脚本"></p><h1 id="javaagent"><a href="#javaagent" class="headerlink" title="javaagent"></a>javaagent</h1><p>无限重设脚本在 2021.2 及以前版本是可以稳定使用的，但是在最新版本是不可用的。ja-netfilter GitHub：<a href="https://github.com/ja-netfilter/ja-netfilter">https://github.com/ja-netfilter/ja-netfilter</a> 这个项目是 zhile发起的，使用 Java 语言封装的一个脚手架，配合单独开发的“插件”可以实现通过反射修改类，屏蔽掉网络请求，简单点说就是网络过滤程序。理论上可以作用于所有 JVM 平台的程序。只要稍加改造就可以用于和谐 JetBrainsIDE。zhile 在自己的博客说明了用于和谐 JetBrains IDE 的插件规则，不过有大佬已经为我们整合好了。</p><p>jetbra.in 在 ja-netfilter 基础上整合了和谐 JetBrians IDE 的定制版，文件见下文，解压文件之后，按照 readme.txt 说明操作。</p><blockquote><p>ja-netfilter-all下载地址：<a href="https://wwi.lanzout.com/i9Kdw00ifnhe">https://wwi.lanzout.com/i9Kdw00ifnhe</a> 密码:c6yr 或者 <a href="https://jetbra.in/s">https://jetbra.in/s</a></p></blockquote><p><img src="https://files.mdnice.com/user/10819/2ff96909-4ef3-44b2-b327-20f1c8e6ce0b.png" alt="解压文件的目录"></p><p><strong>具体步骤如下：</strong></p><ol><li>打开 scripts 文件夹。如果你是 Linux/MacOS，运行 install.sh，如果你是 Windows，运行 install-all-users.vbs 或者install-current-user.vbs（此操作作用是配置 IDE 的 JVM 参数，并添加至环境变量），顾名思义，第一个是为所有用户安装，第二个是为当前用户安装。</li></ol><p><img src="https://files.mdnice.com/user/10819/f99881f3-15ac-4285-b3ed-031acc311c48.png" alt="懒人脚本"></p><ol start="2"><li>打开 IDE，我们选择激活码的方式激活，激活码到 <a href="https://jetbra.in/s">https://jetbra.in/s</a> 这个站点找，寻找对应 IDE 的激活码即可。最后就可以进入到IDE 后并且可以无限期使用了(提示：在 jetbra.in 也有插件对应的激活码)。</li></ol><p><strong>Tips：</strong></p><ol><li>解压的文件夹路径建议不要有中文，并且之后也不要移动。</li><li>默认授权用户名是 MyMap，默认激活日期是 2023-12-31，这个不用管，只是一个形式，如果你想修改的话就修改 config-jetbrains/mymap.conf文件，授权用户名和到期时间想改多久就该多久。最终都不会影响使用，只是自己看着舒服而已。</li></ol><p><img src="https://files.mdnice.com/user/10819/08ac6b6e-a362-424c-87c6-191a51f7fad1.png" alt="mymap配置文件"></p><p>最后建议使用每个大版本的最后一个版本，相比较是稳定的，Bug 比较少，比如 20 年的 IDEA 的最后一个版本 2020.3.4。</p><p>相关链接：</p><ol><li>ja-netfilter：<a href="https://github.com/ja-netfilter/ja-netfilter">https://github.com/ja-netfilter/ja-netfilter</a></li><li>jetbra.in：<a href="https://jetbra.in/s">https://jetbra.in/s</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="实用工具" scheme="https://jonssonyan.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="tool" scheme="https://jonssonyan.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>使用Syncthing搭建自己的私人网盘</title>
    <link href="https://jonssonyan.com/2022/02/26/%E4%BD%BF%E7%94%A8Syncthing%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
    <id>https://jonssonyan.com/2022/02/26/%E4%BD%BF%E7%94%A8Syncthing%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98/</id>
    <published>2022-02-26T03:30:57.000Z</published>
    <updated>2023-03-16T15:06:40.487Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><p>Syncthing 是一款开源免费跨平台的文件同步工具，是基于 P2P技术实现设备间的文件同步，不懂得可以问下搜索引擎。本期教程是教你如何搭建远程服务，与本地服务配合，达到文件实时备份的目的。同步网速取决于自己机器带宽的上限，理论是同步的节点越多同步越快。</p><p><strong>Syncthing 优缺点：</strong></p><p>优点：</p><ol><li>开源安全跨平台，TLS 加密，开发活跃</li><li>安装简单，网络要求低</li><li>提供完善的<strong>版本控制</strong></li></ol><p>缺点：</p><ol start="4"><li>更适合用于<strong>私有分享</strong>，而不适合用于<strong>公有分享</strong></li><li>无 iOS 客户端</li><li>病毒扩散问题</li></ol><blockquote><p>Syncthing 官网：<a href="https://syncthing.net/">https://syncthing.net/</a></p></blockquote><h1 id="在服务器上部署-Docker"><a href="#在服务器上部署-Docker" class="headerlink" title="在服务器上部署 Docker"></a>在服务器上部署 Docker</h1><blockquote><p>Centos 安装 Docker：<a href="https://docs.docker.com/engine/install/centos/">https://docs.docker.com/engine/install/centos/</a></p></blockquote><h1 id="拉取-syncthing-镜像"><a href="#拉取-syncthing-镜像" class="headerlink" title="拉取 syncthing 镜像"></a>拉取 syncthing 镜像</h1><p><code>docker pull syncthing/syncthing</code></p><h1 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8384:8384 -p 22000:22000 -v /jonssonyan/syncthing:/var/syncthing --restart=always syncthing/syncthing:latest</span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li>-d：后台运行</li><li>-p 8384:8384： 暴露 8384 端口，8384 是 Web 界面端口</li><li>-p 22000:22000：暴露 22000 端口，22000 是通讯端口</li><li>-v /jonssonyan/syncthing:/var/syncthing：映射文件夹，将备份的文件映射至宿主机的/jonssonyan/syncthing 目录下</li><li>–restart=always：容器随着 Docker 的启动而启动</li><li>syncthing/syncthing:latest：镜像版本</li></ul><p>如果你购买的服务器有控制面板，需要在控制面板开放<code>8384</code>（TCP）和<code>22000</code>（TCP 和 UDP 都要开）</p><p>至此，syncthing 已经部署到了服务器上，下一步我们只需要在本地也启动一个 syncthing，与服务器进行实时同步即可。</p><h1 id="本地运行-syncthing"><a href="#本地运行-syncthing" class="headerlink" title="本地运行 syncthing"></a>本地运行 syncthing</h1><blockquote><p>syncthing 下载地址：<a href="https://syncthing.net/downloads/">https://syncthing.net/downloads/</a></p></blockquote><p>Windows 有两个客户端：</p><ol><li><a href="https://github.com/canton7/SyncTrayzor/releases/latest">SyncTrayzor</a></li><li><a href="https://github.com/syncthing/syncthing/releases/download/v1.19.0/syncthing-windows-amd64-v1.19.0.zip">Base Syncthing</a></li></ol><p>本文使用的是<code>Base Syncthing</code></p><p><img src="https://files.mdnice.com/user/10819/683eb95b-45bc-41ec-996b-7bac3ed1ce61.png"></p><p>启动好后会自动打开浏览器<code>http://127.0.0.1:8384/</code>，如果没有自动打开，请手动在浏览器访问这个网址，这个是 syncthing 的默认 Web 界面。</p><h1 id="正确使用-syncthing-方法"><a href="#正确使用-syncthing-方法" class="headerlink" title="正确使用 syncthing 方法"></a>正确使用 syncthing 方法</h1><h2 id="设置-syncthingWeb-面板的用户名和密码"><a href="#设置-syncthingWeb-面板的用户名和密码" class="headerlink" title="设置 syncthingWeb 面板的用户名和密码"></a>设置 syncthingWeb 面板的用户名和密码</h2><p><img src="https://files.mdnice.com/user/10819/5b310f5f-87e0-44c8-9649-19152915acb9.png"></p><h2 id="添加远程设备"><a href="#添加远程设备" class="headerlink" title="添加远程设备"></a>添加远程设备</h2><p><img src="https://files.mdnice.com/user/10819/87914596-9c20-46ef-b15a-d1677b88fefa.png"></p><p>如何查看设备 ID？</p><p><img src="https://files.mdnice.com/user/10819/ba623c55-188e-49fb-b36a-b7eed3c2a5cb.png"></p><h2 id="设置共享文件夹，并设置它的密码"><a href="#设置共享文件夹，并设置它的密码" class="headerlink" title="设置共享文件夹，并设置它的密码"></a>设置共享文件夹，并设置它的密码</h2><p><img src="https://files.mdnice.com/user/10819/632b8bb3-0c0f-4df3-95fc-ad0e3724a531.png"></p><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><p><img src="https://files.mdnice.com/user/10819/f5bcb8e2-bc2d-4abe-85f2-725293e18fc1.png"></p><h2 id="忽略模式"><a href="#忽略模式" class="headerlink" title="忽略模式"></a>忽略模式</h2><p><img src="https://files.mdnice.com/user/10819/de3ad69d-7023-4ec7-a9ad-60e1c104c59c.png"></p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="实用工具" scheme="https://jonssonyan.com/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="tool" scheme="https://jonssonyan.com/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>IDE问题汇总</title>
    <link href="https://jonssonyan.com/2022/02/22/IDE%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>https://jonssonyan.com/2022/02/22/IDE%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</id>
    <published>2022-02-22T07:18:03.000Z</published>
    <updated>2023-03-14T14:04:31.213Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/>开发环境/开发工具使用过程中的错误记录<span id="more"></span><h1 id="解决IDEA输入法切换不了的问题"><a href="#解决IDEA输入法切换不了的问题" class="headerlink" title="解决IDEA输入法切换不了的问题"></a>解决IDEA输入法切换不了的问题</h1><p>问题描述：除了 Git 提交界面输入法切换不了以外，只要是弹窗的交互界面输入法都切换不了。除了 IDEA，2020 所有其他的 IDE 也都存在这个问题。</p><p>是 JetBrains 官方的问题，IDEA 内置的 jre 的 Bug，需要替换成可用的版本。</p><p>JetBrains 官方 issue：<a href="https://youtrack.jetbrains.com/issue/IDEA-265128">issue 地址</a></p><p>解决方案如下：</p><ol><li>下载官方提供的可用的 jre 版本</li></ol><p><a href="https://cache-redirector.jetbrains.com/intellij-jbr/jbr_jcef-11_0_9_1-windows-x64-b1145.63.tar.gz">点击这里下载</a></p><ol start="2"><li>替换 IDEA 自带的 jre</li></ol><p>点击主菜单上的 Help | Find Action （帮助 | 查找操作)，输入 Choose Boot Java Runtime for the IDE (选择 IDE 的启动 Java 运行时)，回车，然后点击 New (新建)的下拉菜单，往下拉，找到 Add Custom Runtime（添加自定义运行时) 的选项，然后选择这个压缩了的 JRE 运行，并重启 IDE。</p><p>补充：版本是 2020.3 及以上需要安装插件 Choose Runtime</p><p><a href="https://plugins.jetbrains.com/plugin/12836-choose-runtime">点击这里跳转至插件页面</a></p><p>演示图如下：</p><p><img src="https://files.mdnice.com/user/10819/88f5e5b0-36bd-499a-ae90-de03d0e73cd0.png"></p><p><img src="https://files.mdnice.com/user/10819/954e2dd2-cb67-4c11-a653-c1f35f439afb.png"></p><p><img src="https://files.mdnice.com/user/10819/b407c3b3-0e66-48af-b282-c2a4f0eb4a68.png"></p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;
开发环境/开发工具使用过程中的错误记录</summary>
    
    
    
    <category term="活捉Bug" scheme="https://jonssonyan.com/categories/%E6%B4%BB%E6%8D%89Bug/"/>
    
    
    <category term="ide" scheme="https://jonssonyan.com/tags/ide/"/>
    
    <category term="idea" scheme="https://jonssonyan.com/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>IDEA线上排错神器之JVM远程Debug</title>
    <link href="https://jonssonyan.com/2022/02/22/IDEA%E7%BA%BF%E4%B8%8A%E6%8E%92%E9%94%99%E7%A5%9E%E5%99%A8%E4%B9%8BJVM%E8%BF%9C%E7%A8%8BDebug/"/>
    <id>https://jonssonyan.com/2022/02/22/IDEA%E7%BA%BF%E4%B8%8A%E6%8E%92%E9%94%99%E7%A5%9E%E5%99%A8%E4%B9%8BJVM%E8%BF%9C%E7%A8%8BDebug/</id>
    <published>2022-02-22T07:06:36.000Z</published>
    <updated>2023-02-26T15:15:16.143Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><p>你是否为线上排查问题而苦恼，今天教你不发版的情况下进行线上 Debug。</p><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>首先我们新建一个最简单的 Spring Boot 项目，输出 12345 是为了方便我们调试</p><p><img src="https://files.mdnice.com/user/10819/62b1c09f-993d-4d76-a003-38707aaf8edd.png"></p><p>通过 Maven 进行打包，并上传至远程服务器，我这里使用的虚拟机</p><p><img src="https://files.mdnice.com/user/10819/9c25be65-f301-4271-88f1-9ef0d95e488d.png"></p><p>使用以下命令运行 jar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># JDK5-8</span></span><br><span class="line">java -agentlib:jdwp=transport=dt_socket,server=y,<span class="built_in">suspend</span>=n,address=5005 -jar remote-jvm-debug-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>以上参数可以在 IDEA 中找到，根据自己 JDK 的版本 copy 参数，本例使用的是 JDK8</p><p><img src="https://files.mdnice.com/user/10819/54979d58-fa48-44c8-8400-8b9c6acf401b.png"></p><p>参数说明:</p><ul><li><p>transport: 监听 Socket 端口连接方式（也可以 dt_shmem 共享内存方式，但限于 Windows 机器，并且服务提供端和调试端只能位于同一台机）</p></li><li><p>server: =y 表示当前是调试服务端，=n 表示当前是调试客户端</p></li><li><p>suspend: =n 表示启动时不中断（如果启动时中断，一般用于调试启动不了的问题）</p></li><li><p>address: =5005 表示本地监听 5005 端口</p></li></ul><p><strong>注意</strong></p><ol><li><p>因为这里使用到<code>5005</code>，所以远程服务器如果开启防火墙需要放行<code>5005</code>端口</p><p>Linux 查看防火墙状态: <code>systemctl status firewalld</code></p><p>Linux 暂时关闭防火墙: <code>systemctl stop firewalld</code></p></li><li><p><code>-agentlib:xxxx</code>必须在 <code>-jar</code> 之前</p></li></ol><p>jar 运行之后的效果如下</p><p><img src="https://files.mdnice.com/user/10819/d7f51994-3a18-415d-90a6-21497b4bb5fe.png"></p><h1 id="远程调试"><a href="#远程调试" class="headerlink" title="远程调试"></a>远程调试</h1><p>远程启动好 jar 后，在 idea 中配置远程 Debug，如图所示:</p><p><img src="https://files.mdnice.com/user/10819/6781e887-c55a-4c15-83dd-d44b51aab548.png"></p><p>最后我们运行 Remote JVM Debug，并在程序中打一个断点</p><p><img src="https://files.mdnice.com/user/10819/aa211bc7-3000-4467-977a-11aafaf1b256.png"></p><p>我们使用 Postman 请求接口后，此时就可以调试线上的程序了，需要注意的是，本地程序不需要运行，但是必须保证本地的代码和远程服务器上的代码是一致。</p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="开发环境" scheme="https://jonssonyan.com/categories/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="idea" scheme="https://jonssonyan.com/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>WebStorm前端开发代码规范</title>
    <link href="https://jonssonyan.com/2022/02/22/WebStorm%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    <id>https://jonssonyan.com/2022/02/22/WebStorm%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/</id>
    <published>2022-02-22T07:05:15.000Z</published>
    <updated>2023-02-26T15:15:16.144Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><span id="more"></span><h1 id="Prettier-代码格式化"><a href="#Prettier-代码格式化" class="headerlink" title="Prettier 代码格式化"></a>Prettier 代码格式化</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add prettier</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/10819/96ff0b8b-759a-4bc3-8b1c-9f5a1d95f74a.png"></p><p><strong>格式化 js 文件将双引号改为单引号</strong></p><p>在根目录下新建<code>.prettierrc.json</code>的文件 文件内容如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;trailingComma&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><code>singleQuote</code>: 单引号</li><li><code>trailingComma</code>: 对象属性最后没有”,”</li><li><code>semi</code>: 是否需要分号</li></ul><h1 id="Stylelint-检查"><a href="#Stylelint-检查" class="headerlink" title="Stylelint 检查"></a>Stylelint 检查</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add stylelint</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/10819/d1d504ca-1d17-4182-94fa-b57750b98ce4.png"></p><h1 id="Eslint-检查"><a href="#Eslint-检查" class="headerlink" title="Eslint 检查"></a>Eslint 检查</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add eslint</span><br></pre></td></tr></table></figure><p><img src="https://files.mdnice.com/user/10819/5a3c8c81-4cb9-49aa-8ad1-e049ac88563f.png"></p><h1 id="TypeScript-规范"><a href="#TypeScript-规范" class="headerlink" title="TypeScript 规范"></a>TypeScript 规范</h1><p><img src="https://files.mdnice.com/user/10819/7ab37471-52fa-4c11-a95a-2d9ebc97c44b.png"></p><p><img src="https://files.mdnice.com/user/10819/25dab29f-86e9-4886-80c9-82dd87b088a8.png"></p>]]></content>
    
    
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</summary>
    
    
    
    <category term="开发环境" scheme="https://jonssonyan.com/categories/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="javascript" scheme="https://jonssonyan.com/tags/javascript/"/>
    
  </entry>
  
</feed>
